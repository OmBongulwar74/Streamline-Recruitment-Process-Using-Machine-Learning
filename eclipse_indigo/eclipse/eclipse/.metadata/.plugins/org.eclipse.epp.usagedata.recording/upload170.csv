what,kind,bundleId,bundleVersion,description,time
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.wst.jsdt.ui"".",1392831175291
error,log,,,"Error in JSDT Core during AST creation",1392831175301
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.wst.jsdt.ui"".",1392831175498
error,log,,,"Error in JSDT Core during AST creation",1392831175513
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n//\njquery-timepicker v1.3.3\n//http://jonthornton.github.com/jquery-timepicker/\n\n//requires jQuery 1.7+\n//\n\n\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['jquery'], factory);\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\tvar _baseDate = _generateBaseDate();\n\tvar _ONE_DAY = 86400;\n\tvar _defaults =\t{\n\t\tclassName: null,\n\t\tminTime: null,\n\t\tmaxTime: null,\n\t\tdurationTime: null,\n\t\tstep: 30,\n\t\tshowDuration: false,\n\t\ttimeFormat: 'g:ia',\n\t\tscrollDefaultNow: false,\n\t\tscrollDefaultTime: false,\n\t\tselectOnBlur: false,\n\t\tdisableTouchKeyboard: false,\n\t\tforceRoundTime: false,\n\t\tappendTo: 'body',\n\t\tdisableTimeRanges: [],\n\t\tcloseOnWindowScroll: false,\n\t\ttypeaheadHighlight: true,\n\t\tnoneOption: false\n\t};\n\tvar _lang = {\n\t\tdecimal: '.',\n\t\tmins: 'mins',\n\t\thr: 'hr',\n\t\thrs: 'hrs'\n\t};\n\n\tvar methods =\n\t{\n\t\tinit: function(options)\n\t\t{\n\t\t\treturn this.each(function()\n\t\t\t{\n\t\t\t\tvar self = $(this);\n\n\t\t\t\t// pick up settings from data attributes\n\t\t\t\tvar attributeOptions = [];\n\t\t\t\tfor (key in _defaults) {\n\t\t\t\t\tif (self.data(key))  {\n\t\t\t\t\t\tattributeOptions[key] = self.data(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar settings = $.extend({}, _defaults, attributeOptions, options);\n\n\t\t\t\tif (settings.lang) {\n\t\t\t\t\t_lang = $.extend(_lang, settings.lang);\n\t\t\t\t}\n\n\t\t\t\tsettings = _parseSettings(settings);\n\t\t\t\tself.data('timepicker-settings', settings);\n\t\t\t\tself.addClass('ui-timepicker-input');\n\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t_render(self);\n\t\t\t\t} else {\n\t\t\t\t\tself.prop('autocomplete', 'off');\n\t\t\t\t\tself.on('click.timepicker focus.timepicker', methods.show);\n\t\t\t\t\tself.on('change.timepicker', _formatValue);\n\t\t\t\t\tself.on('keydown.timepicker', _keydownhandler);\n\t\t\t\t\tself.on('keyup.timepicker', _keyuphandler);\n\n\t\t\t\t\t_formatValue.call(self.get(0));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tshow: function(e)\n\t\t{\n\t\t\tif (e) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').focus();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_hideKeyboard(self)) {\n\t\t\t\t// block the keyboard on mobile devices\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\t// check if input is readonly\n\t\t\tif (self.prop('readonly')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if list needs to be rendered\n\t\t\tif (!list || list.length === 0 || typeof settings.durationTime === 'function') {\n\t\t\t\t_render(self);\n\t\t\t\tlist = self.data('timepicker-list');\n\t\t\t}\n\n\t\t\tif (list.is(':visible')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// make sure other pickers are hidden\n\t\t\tmethods.hide();\n\n\t\t\tlist.show();\n\n\t\t\tif ((self.offset().top + self.outerHeight(true) + list.outerHeight()) > $(window).height() + $(window).scrollTop()) {\n\t\t\t\t// position the dropdown on top\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left': self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top - list.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// put it under the input\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left':self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top + self.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// position scrolling\n\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\tif (!selected.length) {\n\t\t\t\tif (_getTimeValue(self)) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(_getTimeValue(self)));\n\t\t\t\t} else if (settings.scrollDefaultNow) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(new Date()));\n\t\t\t\t} else if (settings.scrollDefaultTime !== false) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(settings.scrollDefaultTime));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selected && selected.length) {\n\t\t\t\tvar topOffset = list.scrollTop() + selected.position().top - selected.outerHeight();\n\t\t\t\tlist.scrollTop(topOffset);\n\t\t\t} else {\n\t\t\t\tlist.scrollTop(0);\n\t\t\t}\n\n\t\t\t// attach close handlers\n\t\t\t$(document).on('touchstart.ui-timepicker mousedown.ui-timepicker', _closeHandler);\n\t\t\tif (settings.closeOnWindowScroll) {\n\t\t\t\t$(document).on('scroll.ui-timepicker', _closeHandler);\n\t\t\t}\n\n\t\t\tself.trigger('showTimepicker');\n\n\t\t\treturn this;\n\t\t},\n\n\t\thide: function(e)\n\t\t{\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings && settings.useSelect) {\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\t$('.ui-timepicker-wrapper:visible').each(function() {\n\t\t\t\tvar list = $(this);\n\t\t\t\tvar self = list.data('timepicker-input');\n\t\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\t\tif (settings && settings.selectOnBlur) {\n\t\t\t\t\t_selectValue(self);\n\t\t\t\t}\n\n\t\t\t\tlist.hide();\n\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\n\t\toption: function(key, value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\tif (typeof key == 'object') {\n\t\t\t\tsettings = $.extend(settings, key);\n\n\t\t\t} else if (typeof key == 'string' && typeof value != 'undefined') {\n\t\t\t\tsettings[key] = value;\n\n\t\t\t} else if (typeof key == 'string') {\n\t\t\t\treturn settings[key];\n\t\t\t}\n\n\t\t\tsettings = _parseSettings(settings);\n\n\t\t\tself.data('timepicker-settings', settings);\n\n\t\t\tif (list) {\n\t\t\t\tlist.remove();\n\t\t\t\tself.data('timepicker-list', false);\n\t\t\t}\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\t_render(self);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetSecondsFromMidnight: function()\n\t\t{\n\t\t\treturn _time2int(_getTimeValue(this));\n\t\t},\n\n\t\tgetTime: function(relative_date)\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\tvar time_string = _getTimeValue(self);\n\t\t\tif (!time_string) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!relative_date) {\n\t\t\t\trelative_date = new Date();\n\t\t\t}\n\n\t\t\trelative_date.setHours(0, 0, 0, 0);\n\t\t\treturn new Date(relative_date.valueOf() + (_time2int(time_string)*1000));\n\t\t},\n\n\t\tsetTime: function(value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar prettyTime = _int2time(_time2int(value), self.data('timepicker-settings').timeFormat);\n\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\t_setSelected(self, self.data('timepicker-list'));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tremove: function()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!self.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.removeAttr('autocomplete', 'off');\n\t\t\tself.removeClass('ui-timepicker-input');\n\t\t\tself.removeData('timepicker-settings');\n\t\t\tself.off('.timepicker');\n\n\t\t\t// timepicker-list won't be present unless the user has interacted with this timepicker\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\tself.data('timepicker-list').remove();\n\t\t\t}\n\n\t\t\tself.removeData('timepicker-list');\n\n\t\t\treturn this;\n\t\t}\n\t};\n\n\t// private methods\n\n\tfunction _parseSettings(settings)\n\t{\n\t\tif (settings.minTime) {\n\t\t\tsettings.minTime = _time2int(settings.minTime);\n\t\t}\n\n\t\tif (settings.maxTime) {\n\t\t\tsettings.maxTime = _time2int(settings.maxTime);\n\t\t}\n\n\t\tif (settings.durationTime && typeof settings.durationTime !== 'function') {\n\t\t\tsettings.durationTime = _time2int(settings.durationTime);\n\t\t}\n\n\t\tif (settings.disableTimeRanges.length > 0) {\n\t\t\t// convert string times to integers\n\t\t\tfor (var i in settings.disableTimeRanges) {\n\t\t\t\tsettings.disableTimeRanges[i] = [\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][0]),\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][1])\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// sort by starting time\n\t\t\tsettings.disableTimeRanges = settings.disableTimeRanges.sort(function(a, b){\n\t\t\t\treturn a[0] - b[0];\n\t\t\t});\n\n\t\t\t// merge any overlapping ranges\n\t\t\tfor (var i = settings.disableTimeRanges.length-1; i > 0; i--) {\n\t\t\t\tif (settings.disableTimeRanges[i][0] <= settings.disableTimeRanges[i-1][1]) {\n\t\t\t\t\tsettings.disableTimeRanges[i-1] = [\n\t\t\t\t\t\tMath.min(settings.disableTimeRanges[i][0], settings.disableTimeRanges[i-1][0]),\n\t\t\t\t\t\tMath.max(settings.disableTimeRanges[i][1], settings.disableTimeRanges[i-1][1])\n\t\t\t\t\t];\n\t\t\t\t\tsettings.disableTimeRanges.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tfunction _render(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.length) {\n\t\t\tlist.remove();\n\t\t\tself.data('timepicker-list', false);\n\t\t}\n\n\t\tif (settings.useSelect) {\n\t\t\tlist = $('<select />', { 'class': 'ui-timepicker-select' });\n\t\t\tvar wrapped_list = list;\n\t\t} else {\n\t\t\tlist = $('<ul />', { 'class': 'ui-timepicker-list' });\n\n\t\t\tvar wrapped_list = $('<div />', { 'class': 'ui-timepicker-wrapper', 'tabindex': -1 });\n\t\t\twrapped_list.css({'display':'none', 'position': 'absolute' }).append(list);\n\t\t}\n\n\t\tif (settings.noneOption) {\n\t\t\tvar defaultLabel = (settings.useSelect) ? 'Time...' : 'None';\n\t\t\tvar label = (typeof settings.noneOption == 'string') ? settings.noneOption : defaultLabel;\n\t\t\tif (settings.useSelect) {\n\t\t\t\tlist.append($('<option value="""">'+label+'</option>'));\n\t\t\t} else {\n\t\t\t\tlist.append($('<li>'+label+'</li>'));\n\t\t\t}\n\t\t}\n\n\t\tif (settings.className) {\n\t\t\twrapped_list.addClass(settings.className);\n\t\t}\n\n\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\twrapped_list.addClass('ui-timepicker-with-duration');\n\t\t}\n\n\t\tvar durStart = settings.minTime;\n\t\tif (typeof settings.durationTime === 'function') {\n\t\t\tdurStart = _time2int(settings.durationTime());\n\t\t} else if (settings.durationTime !== null) {\n\t\t\tdurStart = settings.durationTime;\n\t\t}\n\t\tvar start = (settings.minTime !== null) ? settings.minTime : 0;\n\t\tvar end = (settings.maxTime !== null) ? settings.maxTime : (start + _ONE_DAY - 1);\n\n\t\tif (end <= start) {\n\t\t\t// make sure the end time is greater than start time, otherwise there will be no list to show\n\t\t\tend += _ONE_DAY;\n\t\t}\n\n\t\tif (end === _ONE_DAY-1 && settings.timeFormat.indexOf('H') !== -1) {\n\t\t\t// show a 24:00 option when using military time\n\t\t\tend = _ONE_DAY;\n\t\t}\n\n\t\tvar dr = settings.disableTimeRanges;\n\t\tvar drCur = 0;\n\t\tvar drLen = dr.length;\n\n\t\tfor (var i=start; i <= end; i += settings.step*60) {\n\t\t\tvar timeInt = i;\n\t\t\tvar timeString = _int2time(timeInt, settings.timeFormat);\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tvar row = $('<option />', { 'value': timeString });\n\t\t\t\trow.text(timeString);\n\t\t\t} else {\n\t\t\t\tvar row = $('<li />');\n\t\t\t\trow.data('time', (timeInt <= 86400 ? timeInt : timeInt % 86400));\n\t\t\t\trow.text(timeString);\n\t\t\t}\n\n\t\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\t\tvar durationString = _int2duration(i - durStart);\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\trow.text(row.text()+' ('+durationString+')');\n\t\t\t\t} else {\n\t\t\t\t\tvar duration = $('<span />', { 'class': 'ui-timepicker-duration' });\n\t\t\t\t\tduration.text(' ('+durationString+')');\n\t\t\t\t\trow.append(duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (drCur < drLen) {\n\t\t\t\tif (timeInt >= dr[drCur][1]) {\n\t\t\t\t\tdrCur += 1;\n\t\t\t\t}\n\n\t\t\t\tif (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\n\t\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t\trow.prop('disabled', true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.addClass('ui-timepicker-disabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlist.append(row);\n\t\t}\n\n\t\twrapped_list.data('timepicker-input', self);\n\t\tself.data('timepicker-list', wrapped_list);\n\n\t\tif (settings.useSelect) {\n\t\t\tlist.val(_roundTime(self.val(), settings));\n\t\t\tlist.on('focus', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('showTimepicker');\n\t\t\t});\n\t\t\tlist.on('blur', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('hideTimepicker');\n\t\t\t});\n\t\t\tlist.on('change', function(){\n\t\t\t\t_setTimeValue(self, $(this).val(), 'select');\n\t\t\t});\n\n\t\t\tself.hide().after(list);\n\t\t} else {\n\t\t\tvar appendTo = settings.appendTo;\n\t\t\tif (typeof appendTo === 'string') {\n\t\t\t\tappendTo = $(appendTo);\n\t\t\t} else if (typeof appendTo === 'function') {\n\t\t\t\tappendTo = appendTo(self);\n\t\t\t}\n\t\t\tappendTo.append(wrapped_list);\n\t\t\t_setSelected(self, list);\n\n\t\t\tlist.on('click', 'li', function(e) {\n\n\t\t\t\t// hack: temporarily disable the focus handler\n\t\t\t\t// to deal with the fact that IE fires 'focus'\n\t\t\t\t// events asynchronously\n\t\t\t\tself.off('focus.timepicker');\n\t\t\t\tself.on('focus.timepicker-ie-hack', function(){\n\t\t\t\t\tself.off('focus.timepicker-ie-hack');\n\t\t\t\t\tself.on('focus.timepicker', methods.show);\n\t\t\t\t});\n\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself[0].focus();\n\t\t\t\t}\n\n\t\t\t\t// make sure only the clicked row is selected\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\t$(this).addClass('ui-timepicker-selected');\n\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t\t\twrapped_list.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _roundTime(time, settings)\n\t{\n\t\tif (!$.isNumeric(time)) {\n\t\t\ttime = _time2int(time);\n\t\t}\n\n\t\tif (time === null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar step = settings.step*60;\n\t\t\t// round to the nearest step\n\t\t\treturn _int2time(Math.round(time / step) * step, settings.timeFormat);\n\t\t}\n\t}\n\n\tfunction _generateBaseDate()\n\t{\n\t\treturn new Date(1970, 1, 1, 0, 0, 0);\n\t}\n\n\t// event handler to decide whether to close timepicker\n\tfunction _closeHandler(e)\n\t{\n\t\tvar target = $(e.target);\n\t\tvar input = target.closest('.ui-timepicker-input');\n\t\tif (input.length === 0 && target.closest('.ui-timepicker-wrapper').length === 0) {\n\t\t\tmethods.hide();\n\t\t\t$(document).unbind('.ui-timepicker');\n\t\t}\n\t}\n\n\tfunction _hideKeyboard(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\treturn ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && settings.disableTouchKeyboard);\n\t}\n\n\tfunction _findRow(self, list, value)\n\t{\n\t\tif (!value && value !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar out = false;\n\t\tvar halfStep = settings.step*30;\n\n\t\t// loop through the menu items\n\t\tlist.find('li').each(function(i, obj) {\n\t\t\tvar jObj = $(obj);\n\n\t\t\tvar offset = jObj.data('time') - value;\n\n\t\t\t// check if the value is less than half a step from each row\n\t\t\tif (Math.abs(offset) < halfStep || offset == halfStep) {\n\t\t\t\tout = jObj;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\treturn out;\n\t}\n\n\tfunction _setSelected(self, list)\n\t{\n\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\n\t\tvar timeValue = _time2int(_getTimeValue(self));\n\t\tif (timeValue === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selected = _findRow(self, list, timeValue);\n\t\tif (selected) {\n\n\t\t\tvar topDelta = selected.offset().top - list.offset().top;\n\n\t\t\tif (topDelta + selected.outerHeight() > list.outerHeight() || topDelta < 0) {\n\t\t\t\tlist.scrollTop(list.scrollTop() + selected.position().top - selected.outerHeight());\n\t\t\t}\n\n\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t}\n\t}\n\n\n\tfunction _formatValue()\n\t{\n\t\tif (this.value === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.is(':visible')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar seconds = _time2int(this.value);\n\n\t\tif (seconds === null) {\n\t\t\tself.trigger('timeFormatError');\n\t\t\treturn;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar rangeError = false;\n\t\t// check that the time in within bounds\n\t\tif (settings.minTime !== null && seconds < settings.minTime) {\n\t\t\trangeError = true;\n\t\t} else if (settings.maxTime !== null && seconds > settings.maxTime) {\n\t\t\trangeError = true;\n\t\t}\n\n\t\t// check that time isn't within disabled time ranges\n\t\t$.each(settings.disableTimeRanges, function(){\n\t\t\tif (seconds >= this[0] && seconds < this[1]) {\n\t\t\t\trangeError = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tif (settings.forceRoundTime) {\n\t\t\tvar offset = seconds % (settings.step*60); // step is in minutes\n\n\t\t\tif (offset >= settings.step*30) {\n\t\t\t\t// if offset is larger than a half step, round up\n\t\t\t\tseconds += (settings.step*60) - offset;\n\t\t\t} else {\n\t\t\t\t// round down\n\t\t\t\tseconds -= offset;\n\t\t\t}\n\t\t}\n\n\t\tvar prettyTime = _int2time(seconds, settings.timeFormat);\n\n\t\tif (rangeError) {\n\t\t\tif (_setTimeValue(self, prettyTime, 'error')) {\n\t\t\t\tself.trigger('timeRangeError');\n\t\t\t}\n\t\t} else {\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t}\n\t}\n\n\tfunction _getTimeValue(self)\n\t{\n\t\tif (self.is('input')) {\n\t\t\treturn self.val();\n\t\t} else {\n\t\t\t// use the element's data attributes to store values\n\t\t\treturn self.data('ui-timepicker-value');\n\t\t}\n\t}\n\n\tfunction _setTimeValue(self, value, source)\n\t{\n\t\tif (self.is('input')) {\n\t\t\tself.val(value);\n\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').val(_roundTime(value, settings));\n\t\t\t}\n\t\t}\n\n\t\tif (self.data('ui-timepicker-value') != value) {\n\t\t\tself.data('ui-timepicker-value', value);\n\t\t\tif (source == 'select') {\n\t\t\t\tself.trigger('selectTime').trigger('changeTime').trigger('change');\n\t\t\t} else if (source != 'error') {\n\t\t\t\tself.trigger('changeTime');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tself.trigger('selectTime');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/*\n\t*  Keyboard navigation via arrow keys\n\t*/\n\tfunction _keydownhandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\tif (e.keyCode == 40) {\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 13: // return\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tmethods.hide.apply(this);\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\n\t\t\tcase 38: // up\n\t\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (!selected.length) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\n\t\t\t\t} else if (!selected.is(':first-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.prev().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.prev().position().top < selected.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() - selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 40: // down\n\t\t\t\tselected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (selected.length === 0) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t\t\t} else if (!selected.is(':last-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.next().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.next().position().top + 2*selected.outerHeight() > list.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() + selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 27: // escape\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tcase 9: //tab\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\t/*\n\t*\tTime typeahead\n\t*/\n\tfunction _keyuphandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!self.data('timepicker-settings').typeaheadHighlight) {\n\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 96: // numpad numerals\n\t\t\tcase 97:\n\t\t\tcase 98:\n\t\t\tcase 99:\n\t\t\tcase 100:\n\t\t\tcase 101:\n\t\t\tcase 102:\n\t\t\tcase 103:\n\t\t\tcase 104:\n\t\t\tcase 105:\n\t\t\tcase 48: // numerals\n\t\t\tcase 49:\n\t\t\tcase 50:\n\t\t\tcase 51:\n\t\t\tcase 52:\n\t\t\tcase 53:\n\t\t\tcase 54:\n\t\t\tcase 55:\n\t\t\tcase 56:\n\t\t\tcase 57:\n\t\t\tcase 65: // a\n\t\t\tcase 77: // m\n\t\t\tcase 80: // p\n\t\t\tcase 186: // colon\n\t\t\tcase 8: // backspace\n\t\t\tcase 46: // delete\n\t\t\t\t_setSelected(self, list);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// list.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction _selectValue(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\t\tvar timeValue = null;\n\n\t\tvar cursor = list.find('.ui-timepicker-selected');\n\n\t\tif (cursor.hasClass('ui-timepicker-disabled')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (cursor.length) {\n\t\t\t// selected value found\n\t\t\ttimeValue = cursor.data('time');\n\n\t\t} else if (_getTimeValue(self)) {\n\n\t\t\t// no selected value; fall back on input value\n\t\t\ttimeValue = _time2int(_getTimeValue(self));\n\n\t\t\t_setSelected(self, list);\n\t\t}\n\n\t\tif (timeValue !== null) {\n\t\t\tvar timeString = _int2time(timeValue, settings.timeFormat);\n\t\t\t_setTimeValue(self, timeString, 'select');\n\t\t}\n\n\t\t//self.trigger('change').trigger('selectTime');\n\t\treturn true;\n\t}\n\n\tfunction _int2duration(seconds)\n\t{\n\t\tvar minutes = Math.round(seconds/60);\n\t\tvar duration;\n\n\t\tif (Math.abs(minutes) < 60) {\n\t\t\tduration = [minutes, _lang.mins];\n\t\t} else if (minutes == 60) {\n\t\t\tduration = ['1', _lang.hr];\n\t\t} else {\n\t\t\tvar hours = (minutes/60).toFixed(1);\n\t\t\tif (_lang.decimal != '.') hours = hours.replace('.', _lang.decimal);\n\t\t\tduration = [hours, _lang.hrs];\n\t\t}\n\n\t\treturn duration.join(' ');\n\t}\n\n\tfunction _int2time(seconds, format)\n\t{\n\t\tif (seconds === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar time = new Date(_baseDate.valueOf() + (seconds*1000));\n\n\t\tif (isNaN(time.getTime())) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar output = '';\n\t\tvar hour, code;\n\n\t\tfor (var i=0; i<format.length; i++) {\n\n\t\t\tcode = format.charAt(i);\n\t\t\tswitch (code) {\n\n\t\t\t\tcase 'a':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'pm' : 'am';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'A':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'PM' : 'AM';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\thour = time.getHours() % 12;\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'G':\n\t\t\t\t\toutput += time.getHours();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'h':\n\t\t\t\t\thour = time.getHours() % 12;\n\n\t\t\t\t\tif (hour !== 0 && hour < 10) {\n\t\t\t\t\t\thour = '0'+hour;\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'H':\n\t\t\t\t\thour = time.getHours();\n\t\t\t\t\tif (seconds === _ONE_DAY) hour = 24;\n\t\t\t\t\toutput += (hour > 9) ? hour : '0'+hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'i':\n\t\t\t\t\tvar minutes = time.getMinutes();\n\t\t\t\t\toutput += (minutes > 9) ? minutes : '0'+minutes;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 's':\n\t\t\t\t\tseconds = time.getSeconds();\n\t\t\t\t\toutput += (seconds > 9) ? seconds : '0'+seconds;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\toutput += code;\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tfunction _time2int(timeString)\n\t{\n\t\tif (timeString === '') return null;\n\t\tif (!timeString || timeString+0 == timeString) return timeString;\n\n\t\tif (typeof(timeString) == 'object') {\n\t\t\ttimeString = timeString.getHours()+':'+_pad2(timeString.getMinutes())+':'+_pad2(timeString.getSeconds());\n\t\t}\n\n\t\ttimeString = timeString.toLowerCase();\n\n\t\tvar d = new Date(0);\n\t\tvar time;\n\n\t\t// try to parse time input\n\t\tif (timeString.indexOf("":"") === -1) {\n\t\t\t// no colon present\n\t\t\ttime = timeString.match(/^([0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\n\t\t\tif (!time) {\n\t\t\t\ttime = timeString.match(/^([0-2][0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\t\t\t}\n\t\t} else {\n\t\t\ttime = timeString.match(/^(\\d{1,2})(?::([0-5][0-9]))?(?::([0-5][0-9]))?\\s*([pa]?)m?$/);\n\t\t}\n\n\t\tif (!time) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar hour = parseInt(time[1]*1, 10);\n\t\tvar hours;\n\n\t\tif (time[4]) {\n\t\t\tif (hour == 12) {\n\t\t\t\thours = (time[4] == 'p') ? 12 : 0;\n\t\t\t} else {\n\t\t\t\thours = (hour + (time[4] == 'p' ? 12 : 0));\n\t\t\t}\n\n\t\t} else {\n\t\t\thours = hour;\n\t\t}\n\n\t\tvar minutes = ( time[2]*1 || 0 );\n\t\tvar seconds = ( time[3]*1 || 0 );\n\t\treturn hours*3600 + minutes*60 + seconds;\n\t}\n\n\tfunction _pad2(n) {\n\t\treturn (""0"" + n).slice(-2);\n\t}\n\n\t// Plugin entry\n\t$.fn.timepicker = function(method)\n\t{\n\t\tif (!this.length) return this;\n\t\tif (methods[method]) {\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!this.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\treturn methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t\telse if(typeof method === ""object"" || !method) { return methods.init.apply(this, arguments); }\n\t\telse { $.error(""Method ""+ method + "" does not exist on jQuery.timepicker""); }\n\t};\n}));\n\n----------------------------------- SOURCE END -------------------------------------",1392831190207
error,log,,,"Error in JSDT Core during reconcile",1392831190217
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.wst.jsdt.ui"".",1392831190404
error,log,,,"Error in JSDT Core during AST creation",1392831190409
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n//\n//jquery-timepicker v1.3.3\n//http://jonthornton.github.com/jquery-timepicker/\n\n//requires jQuery 1.7+\n//\n\n\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['jquery'], factory);\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\tvar _baseDate = _generateBaseDate();\n\tvar _ONE_DAY = 86400;\n\tvar _defaults =\t{\n\t\tclassName: null,\n\t\tminTime: null,\n\t\tmaxTime: null,\n\t\tdurationTime: null,\n\t\tstep: 30,\n\t\tshowDuration: false,\n\t\ttimeFormat: 'g:ia',\n\t\tscrollDefaultNow: false,\n\t\tscrollDefaultTime: false,\n\t\tselectOnBlur: false,\n\t\tdisableTouchKeyboard: false,\n\t\tforceRoundTime: false,\n\t\tappendTo: 'body',\n\t\tdisableTimeRanges: [],\n\t\tcloseOnWindowScroll: false,\n\t\ttypeaheadHighlight: true,\n\t\tnoneOption: false\n\t};\n\tvar _lang = {\n\t\tdecimal: '.',\n\t\tmins: 'mins',\n\t\thr: 'hr',\n\t\thrs: 'hrs'\n\t};\n\n\tvar methods =\n\t{\n\t\tinit: function(options)\n\t\t{\n\t\t\treturn this.each(function()\n\t\t\t{\n\t\t\t\tvar self = $(this);\n\n\t\t\t\t// pick up settings from data attributes\n\t\t\t\tvar attributeOptions = [];\n\t\t\t\tfor (key in _defaults) {\n\t\t\t\t\tif (self.data(key))  {\n\t\t\t\t\t\tattributeOptions[key] = self.data(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar settings = $.extend({}, _defaults, attributeOptions, options);\n\n\t\t\t\tif (settings.lang) {\n\t\t\t\t\t_lang = $.extend(_lang, settings.lang);\n\t\t\t\t}\n\n\t\t\t\tsettings = _parseSettings(settings);\n\t\t\t\tself.data('timepicker-settings', settings);\n\t\t\t\tself.addClass('ui-timepicker-input');\n\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t_render(self);\n\t\t\t\t} else {\n\t\t\t\t\tself.prop('autocomplete', 'off');\n\t\t\t\t\tself.on('click.timepicker focus.timepicker', methods.show);\n\t\t\t\t\tself.on('change.timepicker', _formatValue);\n\t\t\t\t\tself.on('keydown.timepicker', _keydownhandler);\n\t\t\t\t\tself.on('keyup.timepicker', _keyuphandler);\n\n\t\t\t\t\t_formatValue.call(self.get(0));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tshow: function(e)\n\t\t{\n\t\t\tif (e) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').focus();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_hideKeyboard(self)) {\n\t\t\t\t// block the keyboard on mobile devices\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\t// check if input is readonly\n\t\t\tif (self.prop('readonly')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if list needs to be rendered\n\t\t\tif (!list || list.length === 0 || typeof settings.durationTime === 'function') {\n\t\t\t\t_render(self);\n\t\t\t\tlist = self.data('timepicker-list');\n\t\t\t}\n\n\t\t\tif (list.is(':visible')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// make sure other pickers are hidden\n\t\t\tmethods.hide();\n\n\t\t\tlist.show();\n\n\t\t\tif ((self.offset().top + self.outerHeight(true) + list.outerHeight()) > $(window).height() + $(window).scrollTop()) {\n\t\t\t\t// position the dropdown on top\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left': self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top - list.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// put it under the input\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left':self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top + self.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// position scrolling\n\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\tif (!selected.length) {\n\t\t\t\tif (_getTimeValue(self)) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(_getTimeValue(self)));\n\t\t\t\t} else if (settings.scrollDefaultNow) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(new Date()));\n\t\t\t\t} else if (settings.scrollDefaultTime !== false) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(settings.scrollDefaultTime));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selected && selected.length) {\n\t\t\t\tvar topOffset = list.scrollTop() + selected.position().top - selected.outerHeight();\n\t\t\t\tlist.scrollTop(topOffset);\n\t\t\t} else {\n\t\t\t\tlist.scrollTop(0);\n\t\t\t}\n\n\t\t\t// attach close handlers\n\t\t\t$(document).on('touchstart.ui-timepicker mousedown.ui-timepicker', _closeHandler);\n\t\t\tif (settings.closeOnWindowScroll) {\n\t\t\t\t$(document).on('scroll.ui-timepicker', _closeHandler);\n\t\t\t}\n\n\t\t\tself.trigger('showTimepicker');\n\n\t\t\treturn this;\n\t\t},\n\n\t\thide: function(e)\n\t\t{\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings && settings.useSelect) {\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\t$('.ui-timepicker-wrapper:visible').each(function() {\n\t\t\t\tvar list = $(this);\n\t\t\t\tvar self = list.data('timepicker-input');\n\t\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\t\tif (settings && settings.selectOnBlur) {\n\t\t\t\t\t_selectValue(self);\n\t\t\t\t}\n\n\t\t\t\tlist.hide();\n\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\n\t\toption: function(key, value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\tif (typeof key == 'object') {\n\t\t\t\tsettings = $.extend(settings, key);\n\n\t\t\t} else if (typeof key == 'string' && typeof value != 'undefined') {\n\t\t\t\tsettings[key] = value;\n\n\t\t\t} else if (typeof key == 'string') {\n\t\t\t\treturn settings[key];\n\t\t\t}\n\n\t\t\tsettings = _parseSettings(settings);\n\n\t\t\tself.data('timepicker-settings', settings);\n\n\t\t\tif (list) {\n\t\t\t\tlist.remove();\n\t\t\t\tself.data('timepicker-list', false);\n\t\t\t}\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\t_render(self);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetSecondsFromMidnight: function()\n\t\t{\n\t\t\treturn _time2int(_getTimeValue(this));\n\t\t},\n\n\t\tgetTime: function(relative_date)\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\tvar time_string = _getTimeValue(self);\n\t\t\tif (!time_string) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!relative_date) {\n\t\t\t\trelative_date = new Date();\n\t\t\t}\n\n\t\t\trelative_date.setHours(0, 0, 0, 0);\n\t\t\treturn new Date(relative_date.valueOf() + (_time2int(time_string)*1000));\n\t\t},\n\n\t\tsetTime: function(value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar prettyTime = _int2time(_time2int(value), self.data('timepicker-settings').timeFormat);\n\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\t_setSelected(self, self.data('timepicker-list'));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tremove: function()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!self.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.removeAttr('autocomplete', 'off');\n\t\t\tself.removeClass('ui-timepicker-input');\n\t\t\tself.removeData('timepicker-settings');\n\t\t\tself.off('.timepicker');\n\n\t\t\t// timepicker-list won't be present unless the user has interacted with this timepicker\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\tself.data('timepicker-list').remove();\n\t\t\t}\n\n\t\t\tself.removeData('timepicker-list');\n\n\t\t\treturn this;\n\t\t}\n\t};\n\n\t// private methods\n\n\tfunction _parseSettings(settings)\n\t{\n\t\tif (settings.minTime) {\n\t\t\tsettings.minTime = _time2int(settings.minTime);\n\t\t}\n\n\t\tif (settings.maxTime) {\n\t\t\tsettings.maxTime = _time2int(settings.maxTime);\n\t\t}\n\n\t\tif (settings.durationTime && typeof settings.durationTime !== 'function') {\n\t\t\tsettings.durationTime = _time2int(settings.durationTime);\n\t\t}\n\n\t\tif (settings.disableTimeRanges.length > 0) {\n\t\t\t// convert string times to integers\n\t\t\tfor (var i in settings.disableTimeRanges) {\n\t\t\t\tsettings.disableTimeRanges[i] = [\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][0]),\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][1])\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// sort by starting time\n\t\t\tsettings.disableTimeRanges = settings.disableTimeRanges.sort(function(a, b){\n\t\t\t\treturn a[0] - b[0];\n\t\t\t});\n\n\t\t\t// merge any overlapping ranges\n\t\t\tfor (var i = settings.disableTimeRanges.length-1; i > 0; i--) {\n\t\t\t\tif (settings.disableTimeRanges[i][0] <= settings.disableTimeRanges[i-1][1]) {\n\t\t\t\t\tsettings.disableTimeRanges[i-1] = [\n\t\t\t\t\t\tMath.min(settings.disableTimeRanges[i][0], settings.disableTimeRanges[i-1][0]),\n\t\t\t\t\t\tMath.max(settings.disableTimeRanges[i][1], settings.disableTimeRanges[i-1][1])\n\t\t\t\t\t];\n\t\t\t\t\tsettings.disableTimeRanges.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tfunction _render(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.length) {\n\t\t\tlist.remove();\n\t\t\tself.data('timepicker-list', false);\n\t\t}\n\n\t\tif (settings.useSelect) {\n\t\t\tlist = $('<select />', { 'class': 'ui-timepicker-select' });\n\t\t\tvar wrapped_list = list;\n\t\t} else {\n\t\t\tlist = $('<ul />', { 'class': 'ui-timepicker-list' });\n\n\t\t\tvar wrapped_list = $('<div />', { 'class': 'ui-timepicker-wrapper', 'tabindex': -1 });\n\t\t\twrapped_list.css({'display':'none', 'position': 'absolute' }).append(list);\n\t\t}\n\n\t\tif (settings.noneOption) {\n\t\t\tvar defaultLabel = (settings.useSelect) ? 'Time...' : 'None';\n\t\t\tvar label = (typeof settings.noneOption == 'string') ? settings.noneOption : defaultLabel;\n\t\t\tif (settings.useSelect) {\n\t\t\t\tlist.append($('<option value="""">'+label+'</option>'));\n\t\t\t} else {\n\t\t\t\tlist.append($('<li>'+label+'</li>'));\n\t\t\t}\n\t\t}\n\n\t\tif (settings.className) {\n\t\t\twrapped_list.addClass(settings.className);\n\t\t}\n\n\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\twrapped_list.addClass('ui-timepicker-with-duration');\n\t\t}\n\n\t\tvar durStart = settings.minTime;\n\t\tif (typeof settings.durationTime === 'function') {\n\t\t\tdurStart = _time2int(settings.durationTime());\n\t\t} else if (settings.durationTime !== null) {\n\t\t\tdurStart = settings.durationTime;\n\t\t}\n\t\tvar start = (settings.minTime !== null) ? settings.minTime : 0;\n\t\tvar end = (settings.maxTime !== null) ? settings.maxTime : (start + _ONE_DAY - 1);\n\n\t\tif (end <= start) {\n\t\t\t// make sure the end time is greater than start time, otherwise there will be no list to show\n\t\t\tend += _ONE_DAY;\n\t\t}\n\n\t\tif (end === _ONE_DAY-1 && settings.timeFormat.indexOf('H') !== -1) {\n\t\t\t// show a 24:00 option when using military time\n\t\t\tend = _ONE_DAY;\n\t\t}\n\n\t\tvar dr = settings.disableTimeRanges;\n\t\tvar drCur = 0;\n\t\tvar drLen = dr.length;\n\n\t\tfor (var i=start; i <= end; i += settings.step*60) {\n\t\t\tvar timeInt = i;\n\t\t\tvar timeString = _int2time(timeInt, settings.timeFormat);\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tvar row = $('<option />', { 'value': timeString });\n\t\t\t\trow.text(timeString);\n\t\t\t} else {\n\t\t\t\tvar row = $('<li />');\n\t\t\t\trow.data('time', (timeInt <= 86400 ? timeInt : timeInt % 86400));\n\t\t\t\trow.text(timeString);\n\t\t\t}\n\n\t\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\t\tvar durationString = _int2duration(i - durStart);\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\trow.text(row.text()+' ('+durationString+')');\n\t\t\t\t} else {\n\t\t\t\t\tvar duration = $('<span />', { 'class': 'ui-timepicker-duration' });\n\t\t\t\t\tduration.text(' ('+durationString+')');\n\t\t\t\t\trow.append(duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (drCur < drLen) {\n\t\t\t\tif (timeInt >= dr[drCur][1]) {\n\t\t\t\t\tdrCur += 1;\n\t\t\t\t}\n\n\t\t\t\tif (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\n\t\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t\trow.prop('disabled', true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.addClass('ui-timepicker-disabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlist.append(row);\n\t\t}\n\n\t\twrapped_list.data('timepicker-input', self);\n\t\tself.data('timepicker-list', wrapped_list);\n\n\t\tif (settings.useSelect) {\n\t\t\tlist.val(_roundTime(self.val(), settings));\n\t\t\tlist.on('focus', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('showTimepicker');\n\t\t\t});\n\t\t\tlist.on('blur', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('hideTimepicker');\n\t\t\t});\n\t\t\tlist.on('change', function(){\n\t\t\t\t_setTimeValue(self, $(this).val(), 'select');\n\t\t\t});\n\n\t\t\tself.hide().after(list);\n\t\t} else {\n\t\t\tvar appendTo = settings.appendTo;\n\t\t\tif (typeof appendTo === 'string') {\n\t\t\t\tappendTo = $(appendTo);\n\t\t\t} else if (typeof appendTo === 'function') {\n\t\t\t\tappendTo = appendTo(self);\n\t\t\t}\n\t\t\tappendTo.append(wrapped_list);\n\t\t\t_setSelected(self, list);\n\n\t\t\tlist.on('click', 'li', function(e) {\n\n\t\t\t\t// hack: temporarily disable the focus handler\n\t\t\t\t// to deal with the fact that IE fires 'focus'\n\t\t\t\t// events asynchronously\n\t\t\t\tself.off('focus.timepicker');\n\t\t\t\tself.on('focus.timepicker-ie-hack', function(){\n\t\t\t\t\tself.off('focus.timepicker-ie-hack');\n\t\t\t\t\tself.on('focus.timepicker', methods.show);\n\t\t\t\t});\n\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself[0].focus();\n\t\t\t\t}\n\n\t\t\t\t// make sure only the clicked row is selected\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\t$(this).addClass('ui-timepicker-selected');\n\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t\t\twrapped_list.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _roundTime(time, settings)\n\t{\n\t\tif (!$.isNumeric(time)) {\n\t\t\ttime = _time2int(time);\n\t\t}\n\n\t\tif (time === null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar step = settings.step*60;\n\t\t\t// round to the nearest step\n\t\t\treturn _int2time(Math.round(time / step) * step, settings.timeFormat);\n\t\t}\n\t}\n\n\tfunction _generateBaseDate()\n\t{\n\t\treturn new Date(1970, 1, 1, 0, 0, 0);\n\t}\n\n\t// event handler to decide whether to close timepicker\n\tfunction _closeHandler(e)\n\t{\n\t\tvar target = $(e.target);\n\t\tvar input = target.closest('.ui-timepicker-input');\n\t\tif (input.length === 0 && target.closest('.ui-timepicker-wrapper').length === 0) {\n\t\t\tmethods.hide();\n\t\t\t$(document).unbind('.ui-timepicker');\n\t\t}\n\t}\n\n\tfunction _hideKeyboard(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\treturn ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && settings.disableTouchKeyboard);\n\t}\n\n\tfunction _findRow(self, list, value)\n\t{\n\t\tif (!value && value !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar out = false;\n\t\tvar halfStep = settings.step*30;\n\n\t\t// loop through the menu items\n\t\tlist.find('li').each(function(i, obj) {\n\t\t\tvar jObj = $(obj);\n\n\t\t\tvar offset = jObj.data('time') - value;\n\n\t\t\t// check if the value is less than half a step from each row\n\t\t\tif (Math.abs(offset) < halfStep || offset == halfStep) {\n\t\t\t\tout = jObj;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\treturn out;\n\t}\n\n\tfunction _setSelected(self, list)\n\t{\n\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\n\t\tvar timeValue = _time2int(_getTimeValue(self));\n\t\tif (timeValue === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selected = _findRow(self, list, timeValue);\n\t\tif (selected) {\n\n\t\t\tvar topDelta = selected.offset().top - list.offset().top;\n\n\t\t\tif (topDelta + selected.outerHeight() > list.outerHeight() || topDelta < 0) {\n\t\t\t\tlist.scrollTop(list.scrollTop() + selected.position().top - selected.outerHeight());\n\t\t\t}\n\n\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t}\n\t}\n\n\n\tfunction _formatValue()\n\t{\n\t\tif (this.value === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.is(':visible')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar seconds = _time2int(this.value);\n\n\t\tif (seconds === null) {\n\t\t\tself.trigger('timeFormatError');\n\t\t\treturn;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar rangeError = false;\n\t\t// check that the time in within bounds\n\t\tif (settings.minTime !== null && seconds < settings.minTime) {\n\t\t\trangeError = true;\n\t\t} else if (settings.maxTime !== null && seconds > settings.maxTime) {\n\t\t\trangeError = true;\n\t\t}\n\n\t\t// check that time isn't within disabled time ranges\n\t\t$.each(settings.disableTimeRanges, function(){\n\t\t\tif (seconds >= this[0] && seconds < this[1]) {\n\t\t\t\trangeError = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tif (settings.forceRoundTime) {\n\t\t\tvar offset = seconds % (settings.step*60); // step is in minutes\n\n\t\t\tif (offset >= settings.step*30) {\n\t\t\t\t// if offset is larger than a half step, round up\n\t\t\t\tseconds += (settings.step*60) - offset;\n\t\t\t} else {\n\t\t\t\t// round down\n\t\t\t\tseconds -= offset;\n\t\t\t}\n\t\t}\n\n\t\tvar prettyTime = _int2time(seconds, settings.timeFormat);\n\n\t\tif (rangeError) {\n\t\t\tif (_setTimeValue(self, prettyTime, 'error')) {\n\t\t\t\tself.trigger('timeRangeError');\n\t\t\t}\n\t\t} else {\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t}\n\t}\n\n\tfunction _getTimeValue(self)\n\t{\n\t\tif (self.is('input')) {\n\t\t\treturn self.val();\n\t\t} else {\n\t\t\t// use the element's data attributes to store values\n\t\t\treturn self.data('ui-timepicker-value');\n\t\t}\n\t}\n\n\tfunction _setTimeValue(self, value, source)\n\t{\n\t\tif (self.is('input')) {\n\t\t\tself.val(value);\n\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').val(_roundTime(value, settings));\n\t\t\t}\n\t\t}\n\n\t\tif (self.data('ui-timepicker-value') != value) {\n\t\t\tself.data('ui-timepicker-value', value);\n\t\t\tif (source == 'select') {\n\t\t\t\tself.trigger('selectTime').trigger('changeTime').trigger('change');\n\t\t\t} else if (source != 'error') {\n\t\t\t\tself.trigger('changeTime');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tself.trigger('selectTime');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/*\n\t*  Keyboard navigation via arrow keys\n\t*/\n\tfunction _keydownhandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\tif (e.keyCode == 40) {\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 13: // return\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tmethods.hide.apply(this);\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\n\t\t\tcase 38: // up\n\t\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (!selected.length) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\n\t\t\t\t} else if (!selected.is(':first-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.prev().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.prev().position().top < selected.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() - selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 40: // down\n\t\t\t\tselected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (selected.length === 0) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t\t\t} else if (!selected.is(':last-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.next().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.next().position().top + 2*selected.outerHeight() > list.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() + selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 27: // escape\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tcase 9: //tab\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\t/*\n\t*\tTime typeahead\n\t*/\n\tfunction _keyuphandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!self.data('timepicker-settings').typeaheadHighlight) {\n\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 96: // numpad numerals\n\t\t\tcase 97:\n\t\t\tcase 98:\n\t\t\tcase 99:\n\t\t\tcase 100:\n\t\t\tcase 101:\n\t\t\tcase 102:\n\t\t\tcase 103:\n\t\t\tcase 104:\n\t\t\tcase 105:\n\t\t\tcase 48: // numerals\n\t\t\tcase 49:\n\t\t\tcase 50:\n\t\t\tcase 51:\n\t\t\tcase 52:\n\t\t\tcase 53:\n\t\t\tcase 54:\n\t\t\tcase 55:\n\t\t\tcase 56:\n\t\t\tcase 57:\n\t\t\tcase 65: // a\n\t\t\tcase 77: // m\n\t\t\tcase 80: // p\n\t\t\tcase 186: // colon\n\t\t\tcase 8: // backspace\n\t\t\tcase 46: // delete\n\t\t\t\t_setSelected(self, list);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// list.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction _selectValue(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\t\tvar timeValue = null;\n\n\t\tvar cursor = list.find('.ui-timepicker-selected');\n\n\t\tif (cursor.hasClass('ui-timepicker-disabled')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (cursor.length) {\n\t\t\t// selected value found\n\t\t\ttimeValue = cursor.data('time');\n\n\t\t} else if (_getTimeValue(self)) {\n\n\t\t\t// no selected value; fall back on input value\n\t\t\ttimeValue = _time2int(_getTimeValue(self));\n\n\t\t\t_setSelected(self, list);\n\t\t}\n\n\t\tif (timeValue !== null) {\n\t\t\tvar timeString = _int2time(timeValue, settings.timeFormat);\n\t\t\t_setTimeValue(self, timeString, 'select');\n\t\t}\n\n\t\t//self.trigger('change').trigger('selectTime');\n\t\treturn true;\n\t}\n\n\tfunction _int2duration(seconds)\n\t{\n\t\tvar minutes = Math.round(seconds/60);\n\t\tvar duration;\n\n\t\tif (Math.abs(minutes) < 60) {\n\t\t\tduration = [minutes, _lang.mins];\n\t\t} else if (minutes == 60) {\n\t\t\tduration = ['1', _lang.hr];\n\t\t} else {\n\t\t\tvar hours = (minutes/60).toFixed(1);\n\t\t\tif (_lang.decimal != '.') hours = hours.replace('.', _lang.decimal);\n\t\t\tduration = [hours, _lang.hrs];\n\t\t}\n\n\t\treturn duration.join(' ');\n\t}\n\n\tfunction _int2time(seconds, format)\n\t{\n\t\tif (seconds === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar time = new Date(_baseDate.valueOf() + (seconds*1000));\n\n\t\tif (isNaN(time.getTime())) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar output = '';\n\t\tvar hour, code;\n\n\t\tfor (var i=0; i<format.length; i++) {\n\n\t\t\tcode = format.charAt(i);\n\t\t\tswitch (code) {\n\n\t\t\t\tcase 'a':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'pm' : 'am';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'A':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'PM' : 'AM';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\thour = time.getHours() % 12;\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'G':\n\t\t\t\t\toutput += time.getHours();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'h':\n\t\t\t\t\thour = time.getHours() % 12;\n\n\t\t\t\t\tif (hour !== 0 && hour < 10) {\n\t\t\t\t\t\thour = '0'+hour;\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'H':\n\t\t\t\t\thour = time.getHours();\n\t\t\t\t\tif (seconds === _ONE_DAY) hour = 24;\n\t\t\t\t\toutput += (hour > 9) ? hour : '0'+hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'i':\n\t\t\t\t\tvar minutes = time.getMinutes();\n\t\t\t\t\toutput += (minutes > 9) ? minutes : '0'+minutes;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 's':\n\t\t\t\t\tseconds = time.getSeconds();\n\t\t\t\t\toutput += (seconds > 9) ? seconds : '0'+seconds;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\toutput += code;\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tfunction _time2int(timeString)\n\t{\n\t\tif (timeString === '') return null;\n\t\tif (!timeString || timeString+0 == timeString) return timeString;\n\n\t\tif (typeof(timeString) == 'object') {\n\t\t\ttimeString = timeString.getHours()+':'+_pad2(timeString.getMinutes())+':'+_pad2(timeString.getSeconds());\n\t\t}\n\n\t\ttimeString = timeString.toLowerCase();\n\n\t\tvar d = new Date(0);\n\t\tvar time;\n\n\t\t// try to parse time input\n\t\tif (timeString.indexOf("":"") === -1) {\n\t\t\t// no colon present\n\t\t\ttime = timeString.match(/^([0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\n\t\t\tif (!time) {\n\t\t\t\ttime = timeString.match(/^([0-2][0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\t\t\t}\n\t\t} else {\n\t\t\ttime = timeString.match(/^(\\d{1,2})(?::([0-5][0-9]))?(?::([0-5][0-9]))?\\s*([pa]?)m?$/);\n\t\t}\n\n\t\tif (!time) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar hour = parseInt(time[1]*1, 10);\n\t\tvar hours;\n\n\t\tif (time[4]) {\n\t\t\tif (hour == 12) {\n\t\t\t\thours = (time[4] == 'p') ? 12 : 0;\n\t\t\t} else {\n\t\t\t\thours = (hour + (time[4] == 'p' ? 12 : 0));\n\t\t\t}\n\n\t\t} else {\n\t\t\thours = hour;\n\t\t}\n\n\t\tvar minutes = ( time[2]*1 || 0 );\n\t\tvar seconds = ( time[3]*1 || 0 );\n\t\treturn hours*3600 + minutes*60 + seconds;\n\t}\n\n\tfunction _pad2(n) {\n\t\treturn (""0"" + n).slice(-2);\n\t}\n\n\t// Plugin entry\n\t$.fn.timepicker = function(method)\n\t{\n\t\tif (!this.length) return this;\n\t\tif (methods[method]) {\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!this.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\treturn methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t\telse if(typeof method === ""object"" || !method) { return methods.init.apply(this, arguments); }\n\t\telse { $.error(""Method ""+ method + "" does not exist on jQuery.timepicker""); }\n\t};\n}));\n\n----------------------------------- SOURCE END -------------------------------------",1392831191981
error,log,,,"Error in JSDT Core during reconcile",1392831191986
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.wst.jsdt.ui"".",1392831192118
error,log,,,"Error in JSDT Core during AST creation",1392831192123
executed,command,org.eclipse.ui,3.7.0.I20110602-0100,"org.eclipse.ui.file.save",1392831193973
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n//\n//jquery-timepicker v1.3.3\n//http://jonthornton.github.com/jquery-timepicker/\n\n//requires jQuery 1.7+\n//\n\n\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['jquery'], factory);\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\tvar _baseDate = _generateBaseDate();\n\tvar _ONE_DAY = 86400;\n\tvar _defaults =\t{\n\t\tclassName: null,\n\t\tminTime: null,\n\t\tmaxTime: null,\n\t\tdurationTime: null,\n\t\tstep: 30,\n\t\tshowDuration: false,\n\t\ttimeFormat: 'g:ia',\n\t\tscrollDefaultNow: false,\n\t\tscrollDefaultTime: false,\n\t\tselectOnBlur: false,\n\t\tdisableTouchKeyboard: false,\n\t\tforceRoundTime: false,\n\t\tappendTo: 'body',\n\t\tdisableTimeRanges: [],\n\t\tcloseOnWindowScroll: false,\n\t\ttypeaheadHighlight: true,\n\t\tnoneOption: false\n\t};\n\tvar _lang = {\n\t\tdecimal: '.',\n\t\tmins: 'mins',\n\t\thr: 'hr',\n\t\thrs: 'hrs'\n\t};\n\n\tvar methods =\n\t{\n\t\tinit: function(options)\n\t\t{\n\t\t\treturn this.each(function()\n\t\t\t{\n\t\t\t\tvar self = $(this);\n\n\t\t\t\t// pick up settings from data attributes\n\t\t\t\tvar attributeOptions = [];\n\t\t\t\tfor (key in _defaults) {\n\t\t\t\t\tif (self.data(key))  {\n\t\t\t\t\t\tattributeOptions[key] = self.data(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar settings = $.extend({}, _defaults, attributeOptions, options);\n\n\t\t\t\tif (settings.lang) {\n\t\t\t\t\t_lang = $.extend(_lang, settings.lang);\n\t\t\t\t}\n\n\t\t\t\tsettings = _parseSettings(settings);\n\t\t\t\tself.data('timepicker-settings', settings);\n\t\t\t\tself.addClass('ui-timepicker-input');\n\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t_render(self);\n\t\t\t\t} else {\n\t\t\t\t\tself.prop('autocomplete', 'off');\n\t\t\t\t\tself.on('click.timepicker focus.timepicker', methods.show);\n\t\t\t\t\tself.on('change.timepicker', _formatValue);\n\t\t\t\t\tself.on('keydown.timepicker', _keydownhandler);\n\t\t\t\t\tself.on('keyup.timepicker', _keyuphandler);\n\n\t\t\t\t\t_formatValue.call(self.get(0));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tshow: function(e)\n\t\t{\n\t\t\tif (e) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').focus();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_hideKeyboard(self)) {\n\t\t\t\t// block the keyboard on mobile devices\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\t// check if input is readonly\n\t\t\tif (self.prop('readonly')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if list needs to be rendered\n\t\t\tif (!list || list.length === 0 || typeof settings.durationTime === 'function') {\n\t\t\t\t_render(self);\n\t\t\t\tlist = self.data('timepicker-list');\n\t\t\t}\n\n\t\t\tif (list.is(':visible')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// make sure other pickers are hidden\n\t\t\tmethods.hide();\n\n\t\t\tlist.show();\n\n\t\t\tif ((self.offset().top + self.outerHeight(true) + list.outerHeight()) > $(window).height() + $(window).scrollTop()) {\n\t\t\t\t// position the dropdown on top\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left': self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top - list.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// put it under the input\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left':self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top + self.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// position scrolling\n\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\tif (!selected.length) {\n\t\t\t\tif (_getTimeValue(self)) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(_getTimeValue(self)));\n\t\t\t\t} else if (settings.scrollDefaultNow) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(new Date()));\n\t\t\t\t} else if (settings.scrollDefaultTime !== false) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(settings.scrollDefaultTime));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selected && selected.length) {\n\t\t\t\tvar topOffset = list.scrollTop() + selected.position().top - selected.outerHeight();\n\t\t\t\tlist.scrollTop(topOffset);\n\t\t\t} else {\n\t\t\t\tlist.scrollTop(0);\n\t\t\t}\n\n\t\t\t// attach close handlers\n\t\t\t$(document).on('touchstart.ui-timepicker mousedown.ui-timepicker', _closeHandler);\n\t\t\tif (settings.closeOnWindowScroll) {\n\t\t\t\t$(document).on('scroll.ui-timepicker', _closeHandler);\n\t\t\t}\n\n\t\t\tself.trigger('showTimepicker');\n\n\t\t\treturn this;\n\t\t},\n\n\t\thide: function(e)\n\t\t{\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings && settings.useSelect) {\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\t$('.ui-timepicker-wrapper:visible').each(function() {\n\t\t\t\tvar list = $(this);\n\t\t\t\tvar self = list.data('timepicker-input');\n\t\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\t\tif (settings && settings.selectOnBlur) {\n\t\t\t\t\t_selectValue(self);\n\t\t\t\t}\n\n\t\t\t\tlist.hide();\n\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\n\t\toption: function(key, value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\tif (typeof key == 'object') {\n\t\t\t\tsettings = $.extend(settings, key);\n\n\t\t\t} else if (typeof key == 'string' && typeof value != 'undefined') {\n\t\t\t\tsettings[key] = value;\n\n\t\t\t} else if (typeof key == 'string') {\n\t\t\t\treturn settings[key];\n\t\t\t}\n\n\t\t\tsettings = _parseSettings(settings);\n\n\t\t\tself.data('timepicker-settings', settings);\n\n\t\t\tif (list) {\n\t\t\t\tlist.remove();\n\t\t\t\tself.data('timepicker-list', false);\n\t\t\t}\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\t_render(self);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetSecondsFromMidnight: function()\n\t\t{\n\t\t\treturn _time2int(_getTimeValue(this));\n\t\t},\n\n\t\tgetTime: function(relative_date)\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\tvar time_string = _getTimeValue(self);\n\t\t\tif (!time_string) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!relative_date) {\n\t\t\t\trelative_date = new Date();\n\t\t\t}\n\n\t\t\trelative_date.setHours(0, 0, 0, 0);\n\t\t\treturn new Date(relative_date.valueOf() + (_time2int(time_string)*1000));\n\t\t},\n\n\t\tsetTime: function(value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar prettyTime = _int2time(_time2int(value), self.data('timepicker-settings').timeFormat);\n\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\t_setSelected(self, self.data('timepicker-list'));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tremove: function()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!self.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.removeAttr('autocomplete', 'off');\n\t\t\tself.removeClass('ui-timepicker-input');\n\t\t\tself.removeData('timepicker-settings');\n\t\t\tself.off('.timepicker');\n\n\t\t\t// timepicker-list won't be present unless the user has interacted with this timepicker\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\tself.data('timepicker-list').remove();\n\t\t\t}\n\n\t\t\tself.removeData('timepicker-list');\n\n\t\t\treturn this;\n\t\t}\n\t};\n\n\t// private methods\n\n\tfunction _parseSettings(settings)\n\t{\n\t\tif (settings.minTime) {\n\t\t\tsettings.minTime = _time2int(settings.minTime);\n\t\t}\n\n\t\tif (settings.maxTime) {\n\t\t\tsettings.maxTime = _time2int(settings.maxTime);\n\t\t}\n\n\t\tif (settings.durationTime && typeof settings.durationTime !== 'function') {\n\t\t\tsettings.durationTime = _time2int(settings.durationTime);\n\t\t}\n\n\t\tif (settings.disableTimeRanges.length > 0) {\n\t\t\t// convert string times to integers\n\t\t\tfor (var i in settings.disableTimeRanges) {\n\t\t\t\tsettings.disableTimeRanges[i] = [\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][0]),\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][1])\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// sort by starting time\n\t\t\tsettings.disableTimeRanges = settings.disableTimeRanges.sort(function(a, b){\n\t\t\t\treturn a[0] - b[0];\n\t\t\t});\n\n\t\t\t// merge any overlapping ranges\n\t\t\tfor (var i = settings.disableTimeRanges.length-1; i > 0; i--) {\n\t\t\t\tif (settings.disableTimeRanges[i][0] <= settings.disableTimeRanges[i-1][1]) {\n\t\t\t\t\tsettings.disableTimeRanges[i-1] = [\n\t\t\t\t\t\tMath.min(settings.disableTimeRanges[i][0], settings.disableTimeRanges[i-1][0]),\n\t\t\t\t\t\tMath.max(settings.disableTimeRanges[i][1], settings.disableTimeRanges[i-1][1])\n\t\t\t\t\t];\n\t\t\t\t\tsettings.disableTimeRanges.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tfunction _render(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.length) {\n\t\t\tlist.remove();\n\t\t\tself.data('timepicker-list', false);\n\t\t}\n\n\t\tif (settings.useSelect) {\n\t\t\tlist = $('<select />', { 'class': 'ui-timepicker-select' });\n\t\t\tvar wrapped_list = list;\n\t\t} else {\n\t\t\tlist = $('<ul />', { 'class': 'ui-timepicker-list' });\n\n\t\t\tvar wrapped_list = $('<div />', { 'class': 'ui-timepicker-wrapper', 'tabindex': -1 });\n\t\t\twrapped_list.css({'display':'none', 'position': 'absolute' }).append(list);\n\t\t}\n\n\t\tif (settings.noneOption) {\n\t\t\tvar defaultLabel = (settings.useSelect) ? 'Time...' : 'None';\n\t\t\tvar label = (typeof settings.noneOption == 'string') ? settings.noneOption : defaultLabel;\n\t\t\tif (settings.useSelect) {\n\t\t\t\tlist.append($('<option value="""">'+label+'</option>'));\n\t\t\t} else {\n\t\t\t\tlist.append($('<li>'+label+'</li>'));\n\t\t\t}\n\t\t}\n\n\t\tif (settings.className) {\n\t\t\twrapped_list.addClass(settings.className);\n\t\t}\n\n\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\twrapped_list.addClass('ui-timepicker-with-duration');\n\t\t}\n\n\t\tvar durStart = settings.minTime;\n\t\tif (typeof settings.durationTime === 'function') {\n\t\t\tdurStart = _time2int(settings.durationTime());\n\t\t} else if (settings.durationTime !== null) {\n\t\t\tdurStart = settings.durationTime;\n\t\t}\n\t\tvar start = (settings.minTime !== null) ? settings.minTime : 0;\n\t\tvar end = (settings.maxTime !== null) ? settings.maxTime : (start + _ONE_DAY - 1);\n\n\t\tif (end <= start) {\n\t\t\t// make sure the end time is greater than start time, otherwise there will be no list to show\n\t\t\tend += _ONE_DAY;\n\t\t}\n\n\t\tif (end === _ONE_DAY-1 && settings.timeFormat.indexOf('H') !== -1) {\n\t\t\t// show a 24:00 option when using military time\n\t\t\tend = _ONE_DAY;\n\t\t}\n\n\t\tvar dr = settings.disableTimeRanges;\n\t\tvar drCur = 0;\n\t\tvar drLen = dr.length;\n\n\t\tfor (var i=start; i <= end; i += settings.step*60) {\n\t\t\tvar timeInt = i;\n\t\t\tvar timeString = _int2time(timeInt, settings.timeFormat);\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tvar row = $('<option />', { 'value': timeString });\n\t\t\t\trow.text(timeString);\n\t\t\t} else {\n\t\t\t\tvar row = $('<li />');\n\t\t\t\trow.data('time', (timeInt <= 86400 ? timeInt : timeInt % 86400));\n\t\t\t\trow.text(timeString);\n\t\t\t}\n\n\t\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\t\tvar durationString = _int2duration(i - durStart);\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\trow.text(row.text()+' ('+durationString+')');\n\t\t\t\t} else {\n\t\t\t\t\tvar duration = $('<span />', { 'class': 'ui-timepicker-duration' });\n\t\t\t\t\tduration.text(' ('+durationString+')');\n\t\t\t\t\trow.append(duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (drCur < drLen) {\n\t\t\t\tif (timeInt >= dr[drCur][1]) {\n\t\t\t\t\tdrCur += 1;\n\t\t\t\t}\n\n\t\t\t\tif (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\n\t\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t\trow.prop('disabled', true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.addClass('ui-timepicker-disabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlist.append(row);\n\t\t}\n\n\t\twrapped_list.data('timepicker-input', self);\n\t\tself.data('timepicker-list', wrapped_list);\n\n\t\tif (settings.useSelect) {\n\t\t\tlist.val(_roundTime(self.val(), settings));\n\t\t\tlist.on('focus', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('showTimepicker');\n\t\t\t});\n\t\t\tlist.on('blur', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('hideTimepicker');\n\t\t\t});\n\t\t\tlist.on('change', function(){\n\t\t\t\t_setTimeValue(self, $(this).val(), 'select');\n\t\t\t});\n\n\t\t\tself.hide().after(list);\n\t\t} else {\n\t\t\tvar appendTo = settings.appendTo;\n\t\t\tif (typeof appendTo === 'string') {\n\t\t\t\tappendTo = $(appendTo);\n\t\t\t} else if (typeof appendTo === 'function') {\n\t\t\t\tappendTo = appendTo(self);\n\t\t\t}\n\t\t\tappendTo.append(wrapped_list);\n\t\t\t_setSelected(self, list);\n\n\t\t\tlist.on('click', 'li', function(e) {\n\n\t\t\t\t// hack: temporarily disable the focus handler\n\t\t\t\t// to deal with the fact that IE fires 'focus'\n\t\t\t\t// events asynchronously\n\t\t\t\tself.off('focus.timepicker');\n\t\t\t\tself.on('focus.timepicker-ie-hack', function(){\n\t\t\t\t\tself.off('focus.timepicker-ie-hack');\n\t\t\t\t\tself.on('focus.timepicker', methods.show);\n\t\t\t\t});\n\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself[0].focus();\n\t\t\t\t}\n\n\t\t\t\t// make sure only the clicked row is selected\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\t$(this).addClass('ui-timepicker-selected');\n\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t\t\twrapped_list.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _roundTime(time, settings)\n\t{\n\t\tif (!$.isNumeric(time)) {\n\t\t\ttime = _time2int(time);\n\t\t}\n\n\t\tif (time === null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar step = settings.step*60;\n\t\t\t// round to the nearest step\n\t\t\treturn _int2time(Math.round(time / step) * step, settings.timeFormat);\n\t\t}\n\t}\n\n\tfunction _generateBaseDate()\n\t{\n\t\treturn new Date(1970, 1, 1, 0, 0, 0);\n\t}\n\n\t// event handler to decide whether to close timepicker\n\tfunction _closeHandler(e)\n\t{\n\t\tvar target = $(e.target);\n\t\tvar input = target.closest('.ui-timepicker-input');\n\t\tif (input.length === 0 && target.closest('.ui-timepicker-wrapper').length === 0) {\n\t\t\tmethods.hide();\n\t\t\t$(document).unbind('.ui-timepicker');\n\t\t}\n\t}\n\n\tfunction _hideKeyboard(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\treturn ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && settings.disableTouchKeyboard);\n\t}\n\n\tfunction _findRow(self, list, value)\n\t{\n\t\tif (!value && value !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar out = false;\n\t\tvar halfStep = settings.step*30;\n\n\t\t// loop through the menu items\n\t\tlist.find('li').each(function(i, obj) {\n\t\t\tvar jObj = $(obj);\n\n\t\t\tvar offset = jObj.data('time') - value;\n\n\t\t\t// check if the value is less than half a step from each row\n\t\t\tif (Math.abs(offset) < halfStep || offset == halfStep) {\n\t\t\t\tout = jObj;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\treturn out;\n\t}\n\n\tfunction _setSelected(self, list)\n\t{\n\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\n\t\tvar timeValue = _time2int(_getTimeValue(self));\n\t\tif (timeValue === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selected = _findRow(self, list, timeValue);\n\t\tif (selected) {\n\n\t\t\tvar topDelta = selected.offset().top - list.offset().top;\n\n\t\t\tif (topDelta + selected.outerHeight() > list.outerHeight() || topDelta < 0) {\n\t\t\t\tlist.scrollTop(list.scrollTop() + selected.position().top - selected.outerHeight());\n\t\t\t}\n\n\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t}\n\t}\n\n\n\tfunction _formatValue()\n\t{\n\t\tif (this.value === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.is(':visible')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar seconds = _time2int(this.value);\n\n\t\tif (seconds === null) {\n\t\t\tself.trigger('timeFormatError');\n\t\t\treturn;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar rangeError = false;\n\t\t// check that the time in within bounds\n\t\tif (settings.minTime !== null && seconds < settings.minTime) {\n\t\t\trangeError = true;\n\t\t} else if (settings.maxTime !== null && seconds > settings.maxTime) {\n\t\t\trangeError = true;\n\t\t}\n\n\t\t// check that time isn't within disabled time ranges\n\t\t$.each(settings.disableTimeRanges, function(){\n\t\t\tif (seconds >= this[0] && seconds < this[1]) {\n\t\t\t\trangeError = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tif (settings.forceRoundTime) {\n\t\t\tvar offset = seconds % (settings.step*60); // step is in minutes\n\n\t\t\tif (offset >= settings.step*30) {\n\t\t\t\t// if offset is larger than a half step, round up\n\t\t\t\tseconds += (settings.step*60) - offset;\n\t\t\t} else {\n\t\t\t\t// round down\n\t\t\t\tseconds -= offset;\n\t\t\t}\n\t\t}\n\n\t\tvar prettyTime = _int2time(seconds, settings.timeFormat);\n\n\t\tif (rangeError) {\n\t\t\tif (_setTimeValue(self, prettyTime, 'error')) {\n\t\t\t\tself.trigger('timeRangeError');\n\t\t\t}\n\t\t} else {\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t}\n\t}\n\n\tfunction _getTimeValue(self)\n\t{\n\t\tif (self.is('input')) {\n\t\t\treturn self.val();\n\t\t} else {\n\t\t\t// use the element's data attributes to store values\n\t\t\treturn self.data('ui-timepicker-value');\n\t\t}\n\t}\n\n\tfunction _setTimeValue(self, value, source)\n\t{\n\t\tif (self.is('input')) {\n\t\t\tself.val(value);\n\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').val(_roundTime(value, settings));\n\t\t\t}\n\t\t}\n\n\t\tif (self.data('ui-timepicker-value') != value) {\n\t\t\tself.data('ui-timepicker-value', value);\n\t\t\tif (source == 'select') {\n\t\t\t\tself.trigger('selectTime').trigger('changeTime').trigger('change');\n\t\t\t} else if (source != 'error') {\n\t\t\t\tself.trigger('changeTime');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tself.trigger('selectTime');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/*\n\t*  Keyboard navigation via arrow keys\n\t*/\n\tfunction _keydownhandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\tif (e.keyCode == 40) {\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 13: // return\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tmethods.hide.apply(this);\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\n\t\t\tcase 38: // up\n\t\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (!selected.length) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\n\t\t\t\t} else if (!selected.is(':first-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.prev().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.prev().position().top < selected.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() - selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 40: // down\n\t\t\t\tselected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (selected.length === 0) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t\t\t} else if (!selected.is(':last-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.next().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.next().position().top + 2*selected.outerHeight() > list.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() + selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 27: // escape\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tcase 9: //tab\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\t/*\n\t*\tTime typeahead\n\t*/\n\tfunction _keyuphandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!self.data('timepicker-settings').typeaheadHighlight) {\n\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 96: // numpad numerals\n\t\t\tcase 97:\n\t\t\tcase 98:\n\t\t\tcase 99:\n\t\t\tcase 100:\n\t\t\tcase 101:\n\t\t\tcase 102:\n\t\t\tcase 103:\n\t\t\tcase 104:\n\t\t\tcase 105:\n\t\t\tcase 48: // numerals\n\t\t\tcase 49:\n\t\t\tcase 50:\n\t\t\tcase 51:\n\t\t\tcase 52:\n\t\t\tcase 53:\n\t\t\tcase 54:\n\t\t\tcase 55:\n\t\t\tcase 56:\n\t\t\tcase 57:\n\t\t\tcase 65: // a\n\t\t\tcase 77: // m\n\t\t\tcase 80: // p\n\t\t\tcase 186: // colon\n\t\t\tcase 8: // backspace\n\t\t\tcase 46: // delete\n\t\t\t\t_setSelected(self, list);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// list.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction _selectValue(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\t\tvar timeValue = null;\n\n\t\tvar cursor = list.find('.ui-timepicker-selected');\n\n\t\tif (cursor.hasClass('ui-timepicker-disabled')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (cursor.length) {\n\t\t\t// selected value found\n\t\t\ttimeValue = cursor.data('time');\n\n\t\t} else if (_getTimeValue(self)) {\n\n\t\t\t// no selected value; fall back on input value\n\t\t\ttimeValue = _time2int(_getTimeValue(self));\n\n\t\t\t_setSelected(self, list);\n\t\t}\n\n\t\tif (timeValue !== null) {\n\t\t\tvar timeString = _int2time(timeValue, settings.timeFormat);\n\t\t\t_setTimeValue(self, timeString, 'select');\n\t\t}\n\n\t\t//self.trigger('change').trigger('selectTime');\n\t\treturn true;\n\t}\n\n\tfunction _int2duration(seconds)\n\t{\n\t\tvar minutes = Math.round(seconds/60);\n\t\tvar duration;\n\n\t\tif (Math.abs(minutes) < 60) {\n\t\t\tduration = [minutes, _lang.mins];\n\t\t} else if (minutes == 60) {\n\t\t\tduration = ['1', _lang.hr];\n\t\t} else {\n\t\t\tvar hours = (minutes/60).toFixed(1);\n\t\t\tif (_lang.decimal != '.') hours = hours.replace('.', _lang.decimal);\n\t\t\tduration = [hours, _lang.hrs];\n\t\t}\n\n\t\treturn duration.join(' ');\n\t}\n\n\tfunction _int2time(seconds, format)\n\t{\n\t\tif (seconds === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar time = new Date(_baseDate.valueOf() + (seconds*1000));\n\n\t\tif (isNaN(time.getTime())) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar output = '';\n\t\tvar hour, code;\n\n\t\tfor (var i=0; i<format.length; i++) {\n\n\t\t\tcode = format.charAt(i);\n\t\t\tswitch (code) {\n\n\t\t\t\tcase 'a':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'pm' : 'am';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'A':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'PM' : 'AM';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\thour = time.getHours() % 12;\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'G':\n\t\t\t\t\toutput += time.getHours();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'h':\n\t\t\t\t\thour = time.getHours() % 12;\n\n\t\t\t\t\tif (hour !== 0 && hour < 10) {\n\t\t\t\t\t\thour = '0'+hour;\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'H':\n\t\t\t\t\thour = time.getHours();\n\t\t\t\t\tif (seconds === _ONE_DAY) hour = 24;\n\t\t\t\t\toutput += (hour > 9) ? hour : '0'+hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'i':\n\t\t\t\t\tvar minutes = time.getMinutes();\n\t\t\t\t\toutput += (minutes > 9) ? minutes : '0'+minutes;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 's':\n\t\t\t\t\tseconds = time.getSeconds();\n\t\t\t\t\toutput += (seconds > 9) ? seconds : '0'+seconds;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\toutput += code;\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tfunction _time2int(timeString)\n\t{\n\t\tif (timeString === '') return null;\n\t\tif (!timeString || timeString+0 == timeString) return timeString;\n\n\t\tif (typeof(timeString) == 'object') {\n\t\t\ttimeString = timeString.getHours()+':'+_pad2(timeString.getMinutes())+':'+_pad2(timeString.getSeconds());\n\t\t}\n\n\t\ttimeString = timeString.toLowerCase();\n\n\t\tvar d = new Date(0);\n\t\tvar time;\n\n\t\t// try to parse time input\n\t\tif (timeString.indexOf("":"") === -1) {\n\t\t\t// no colon present\n\t\t\ttime = timeString.match(/^([0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\n\t\t\tif (!time) {\n\t\t\t\ttime = timeString.match(/^([0-2][0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\t\t\t}\n\t\t} else {\n\t\t\ttime = timeString.match(/^(\\d{1,2})(?::([0-5][0-9]))?(?::([0-5][0-9]))?\\s*([pa]?)m?$/);\n\t\t}\n\n\t\tif (!time) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar hour = parseInt(time[1]*1, 10);\n\t\tvar hours;\n\n\t\tif (time[4]) {\n\t\t\tif (hour == 12) {\n\t\t\t\thours = (time[4] == 'p') ? 12 : 0;\n\t\t\t} else {\n\t\t\t\thours = (hour + (time[4] == 'p' ? 12 : 0));\n\t\t\t}\n\n\t\t} else {\n\t\t\thours = hour;\n\t\t}\n\n\t\tvar minutes = ( time[2]*1 || 0 );\n\t\tvar seconds = ( time[3]*1 || 0 );\n\t\treturn hours*3600 + minutes*60 + seconds;\n\t}\n\n\tfunction _pad2(n) {\n\t\treturn (""0"" + n).slice(-2);\n\t}\n\n\t// Plugin entry\n\t$.fn.timepicker = function(method)\n\t{\n\t\tif (!this.length) return this;\n\t\tif (methods[method]) {\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!this.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\treturn methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t\telse if(typeof method === ""object"" || !method) { return methods.init.apply(this, arguments); }\n\t\telse { $.error(""Method ""+ method + "" does not exist on jQuery.timepicker""); }\n\t};\n}));\n\n----------------------------------- SOURCE END -------------------------------------",1392831194975
error,log,,,"Error in JSDT Core during reconcile",1392831194983
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.wst.jsdt.ui"".",1392831195154
error,log,,,"Error in JSDT Core during AST creation",1392831195181
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.core.resources"".",1392831196160
error,log,,,"Errors occurred during the build.",1392831196259
deactivated,workbench,org.eclipse.ui.workbench,3.7.0.I20110519-0100,"",1392831196332
error,log,,,"Exception occurred during problem detection:\n----------------------------------- SOURCE BEGIN -------------------------------------\n//\n//jquery-timepicker v1.3.3\n//http://jonthornton.github.com/jquery-timepicker/\n\n//requires jQuery 1.7+\n//\n\n\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['jquery'], factory);\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\tvar _baseDate = _generateBaseDate();\n\tvar _ONE_DAY = 86400;\n\tvar _defaults =\t{\n\t\tclassName: null,\n\t\tminTime: null,\n\t\tmaxTime: null,\n\t\tdurationTime: null,\n\t\tstep: 30,\n\t\tshowDuration: false,\n\t\ttimeFormat: 'g:ia',\n\t\tscrollDefaultNow: false,\n\t\tscrollDefaultTime: false,\n\t\tselectOnBlur: false,\n\t\tdisableTouchKeyboard: false,\n\t\tforceRoundTime: false,\n\t\tappendTo: 'body',\n\t\tdisableTimeRanges: [],\n\t\tcloseOnWindowScroll: false,\n\t\ttypeaheadHighlight: true,\n\t\tnoneOption: false\n\t};\n\tvar _lang = {\n\t\tdecimal: '.',\n\t\tmins: 'mins',\n\t\thr: 'hr',\n\t\thrs: 'hrs'\n\t};\n\n\tvar methods =\n\t{\n\t\tinit: function(options)\n\t\t{\n\t\t\treturn this.each(function()\n\t\t\t{\n\t\t\t\tvar self = $(this);\n\n\t\t\t\t// pick up settings from data attributes\n\t\t\t\tvar attributeOptions = [];\n\t\t\t\tfor (key in _defaults) {\n\t\t\t\t\tif (self.data(key))  {\n\t\t\t\t\t\tattributeOptions[key] = self.data(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar settings = $.extend({}, _defaults, attributeOptions, options);\n\n\t\t\t\tif (settings.lang) {\n\t\t\t\t\t_lang = $.extend(_lang, settings.lang);\n\t\t\t\t}\n\n\t\t\t\tsettings = _parseSettings(settings);\n\t\t\t\tself.data('timepicker-settings', settings);\n\t\t\t\tself.addClass('ui-timepicker-input');\n\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t_render(self);\n\t\t\t\t} else {\n\t\t\t\t\tself.prop('autocomplete', 'off');\n\t\t\t\t\tself.on('click.timepicker focus.timepicker', methods.show);\n\t\t\t\t\tself.on('change.timepicker', _formatValue);\n\t\t\t\t\tself.on('keydown.timepicker', _keydownhandler);\n\t\t\t\t\tself.on('keyup.timepicker', _keyuphandler);\n\n\t\t\t\t\t_formatValue.call(self.get(0));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tshow: function(e)\n\t\t{\n\t\t\tif (e) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').focus();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_hideKeyboard(self)) {\n\t\t\t\t// block the keyboard on mobile devices\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\t// check if input is readonly\n\t\t\tif (self.prop('readonly')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if list needs to be rendered\n\t\t\tif (!list || list.length === 0 || typeof settings.durationTime === 'function') {\n\t\t\t\t_render(self);\n\t\t\t\tlist = self.data('timepicker-list');\n\t\t\t}\n\n\t\t\tif (list.is(':visible')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// make sure other pickers are hidden\n\t\t\tmethods.hide();\n\n\t\t\tlist.show();\n\n\t\t\tif ((self.offset().top + self.outerHeight(true) + list.outerHeight()) > $(window).height() + $(window).scrollTop()) {\n\t\t\t\t// position the dropdown on top\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left': self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top - list.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// put it under the input\n\t\t\t\tlist.offset({\n\t\t\t\t\t'left':self.offset().left + parseInt(list.css('marginLeft').replace('px', ''), 10),\n\t\t\t\t\t'top': self.offset().top + self.outerHeight() + parseInt(list.css('marginTop').replace('px', ''), 10)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// position scrolling\n\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\tif (!selected.length) {\n\t\t\t\tif (_getTimeValue(self)) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(_getTimeValue(self)));\n\t\t\t\t} else if (settings.scrollDefaultNow) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(new Date()));\n\t\t\t\t} else if (settings.scrollDefaultTime !== false) {\n\t\t\t\t\tselected = _findRow(self, list, _time2int(settings.scrollDefaultTime));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selected && selected.length) {\n\t\t\t\tvar topOffset = list.scrollTop() + selected.position().top - selected.outerHeight();\n\t\t\t\tlist.scrollTop(topOffset);\n\t\t\t} else {\n\t\t\t\tlist.scrollTop(0);\n\t\t\t}\n\n\t\t\t// attach close handlers\n\t\t\t$(document).on('touchstart.ui-timepicker mousedown.ui-timepicker', _closeHandler);\n\t\t\tif (settings.closeOnWindowScroll) {\n\t\t\t\t$(document).on('scroll.ui-timepicker', _closeHandler);\n\t\t\t}\n\n\t\t\tself.trigger('showTimepicker');\n\n\t\t\treturn this;\n\t\t},\n\n\t\thide: function(e)\n\t\t{\n\t\t\tvar self = $(this);\n\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\tif (settings && settings.useSelect) {\n\t\t\t\tself.blur();\n\t\t\t}\n\n\t\t\t$('.ui-timepicker-wrapper:visible').each(function() {\n\t\t\t\tvar list = $(this);\n\t\t\t\tvar self = list.data('timepicker-input');\n\t\t\t\tvar settings = self.data('timepicker-settings');\n\n\t\t\t\tif (settings && settings.selectOnBlur) {\n\t\t\t\t\t_selectValue(self);\n\t\t\t\t}\n\n\t\t\t\tlist.hide();\n\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\n\t\toption: function(key, value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tvar list = self.data('timepicker-list');\n\n\t\t\tif (typeof key == 'object') {\n\t\t\t\tsettings = $.extend(settings, key);\n\n\t\t\t} else if (typeof key == 'string' && typeof value != 'undefined') {\n\t\t\t\tsettings[key] = value;\n\n\t\t\t} else if (typeof key == 'string') {\n\t\t\t\treturn settings[key];\n\t\t\t}\n\n\t\t\tsettings = _parseSettings(settings);\n\n\t\t\tself.data('timepicker-settings', settings);\n\n\t\t\tif (list) {\n\t\t\t\tlist.remove();\n\t\t\t\tself.data('timepicker-list', false);\n\t\t\t}\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\t_render(self);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetSecondsFromMidnight: function()\n\t\t{\n\t\t\treturn _time2int(_getTimeValue(this));\n\t\t},\n\n\t\tgetTime: function(relative_date)\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\tvar time_string = _getTimeValue(self);\n\t\t\tif (!time_string) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!relative_date) {\n\t\t\t\trelative_date = new Date();\n\t\t\t}\n\n\t\t\trelative_date.setHours(0, 0, 0, 0);\n\t\t\treturn new Date(relative_date.valueOf() + (_time2int(time_string)*1000));\n\t\t},\n\n\t\tsetTime: function(value)\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar prettyTime = _int2time(_time2int(value), self.data('timepicker-settings').timeFormat);\n\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\t_setSelected(self, self.data('timepicker-list'));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tremove: function()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!self.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.removeAttr('autocomplete', 'off');\n\t\t\tself.removeClass('ui-timepicker-input');\n\t\t\tself.removeData('timepicker-settings');\n\t\t\tself.off('.timepicker');\n\n\t\t\t// timepicker-list won't be present unless the user has interacted with this timepicker\n\t\t\tif (self.data('timepicker-list')) {\n\t\t\t\tself.data('timepicker-list').remove();\n\t\t\t}\n\n\t\t\tself.removeData('timepicker-list');\n\n\t\t\treturn this;\n\t\t}\n\t};\n\n\t// private methods\n\n\tfunction _parseSettings(settings)\n\t{\n\t\tif (settings.minTime) {\n\t\t\tsettings.minTime = _time2int(settings.minTime);\n\t\t}\n\n\t\tif (settings.maxTime) {\n\t\t\tsettings.maxTime = _time2int(settings.maxTime);\n\t\t}\n\n\t\tif (settings.durationTime && typeof settings.durationTime !== 'function') {\n\t\t\tsettings.durationTime = _time2int(settings.durationTime);\n\t\t}\n\n\t\tif (settings.disableTimeRanges.length > 0) {\n\t\t\t// convert string times to integers\n\t\t\tfor (var i in settings.disableTimeRanges) {\n\t\t\t\tsettings.disableTimeRanges[i] = [\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][0]),\n\t\t\t\t\t_time2int(settings.disableTimeRanges[i][1])\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// sort by starting time\n\t\t\tsettings.disableTimeRanges = settings.disableTimeRanges.sort(function(a, b){\n\t\t\t\treturn a[0] - b[0];\n\t\t\t});\n\n\t\t\t// merge any overlapping ranges\n\t\t\tfor (var i = settings.disableTimeRanges.length-1; i > 0; i--) {\n\t\t\t\tif (settings.disableTimeRanges[i][0] <= settings.disableTimeRanges[i-1][1]) {\n\t\t\t\t\tsettings.disableTimeRanges[i-1] = [\n\t\t\t\t\t\tMath.min(settings.disableTimeRanges[i][0], settings.disableTimeRanges[i-1][0]),\n\t\t\t\t\t\tMath.max(settings.disableTimeRanges[i][1], settings.disableTimeRanges[i-1][1])\n\t\t\t\t\t];\n\t\t\t\t\tsettings.disableTimeRanges.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tfunction _render(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.length) {\n\t\t\tlist.remove();\n\t\t\tself.data('timepicker-list', false);\n\t\t}\n\n\t\tif (settings.useSelect) {\n\t\t\tlist = $('<select />', { 'class': 'ui-timepicker-select' });\n\t\t\tvar wrapped_list = list;\n\t\t} else {\n\t\t\tlist = $('<ul />', { 'class': 'ui-timepicker-list' });\n\n\t\t\tvar wrapped_list = $('<div />', { 'class': 'ui-timepicker-wrapper', 'tabindex': -1 });\n\t\t\twrapped_list.css({'display':'none', 'position': 'absolute' }).append(list);\n\t\t}\n\n\t\tif (settings.noneOption) {\n\t\t\tvar defaultLabel = (settings.useSelect) ? 'Time...' : 'None';\n\t\t\tvar label = (typeof settings.noneOption == 'string') ? settings.noneOption : defaultLabel;\n\t\t\tif (settings.useSelect) {\n\t\t\t\tlist.append($('<option value="""">'+label+'</option>'));\n\t\t\t} else {\n\t\t\t\tlist.append($('<li>'+label+'</li>'));\n\t\t\t}\n\t\t}\n\n\t\tif (settings.className) {\n\t\t\twrapped_list.addClass(settings.className);\n\t\t}\n\n\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\twrapped_list.addClass('ui-timepicker-with-duration');\n\t\t}\n\n\t\tvar durStart = settings.minTime;\n\t\tif (typeof settings.durationTime === 'function') {\n\t\t\tdurStart = _time2int(settings.durationTime());\n\t\t} else if (settings.durationTime !== null) {\n\t\t\tdurStart = settings.durationTime;\n\t\t}\n\t\tvar start = (settings.minTime !== null) ? settings.minTime : 0;\n\t\tvar end = (settings.maxTime !== null) ? settings.maxTime : (start + _ONE_DAY - 1);\n\n\t\tif (end <= start) {\n\t\t\t// make sure the end time is greater than start time, otherwise there will be no list to show\n\t\t\tend += _ONE_DAY;\n\t\t}\n\n\t\tif (end === _ONE_DAY-1 && settings.timeFormat.indexOf('H') !== -1) {\n\t\t\t// show a 24:00 option when using military time\n\t\t\tend = _ONE_DAY;\n\t\t}\n\n\t\tvar dr = settings.disableTimeRanges;\n\t\tvar drCur = 0;\n\t\tvar drLen = dr.length;\n\n\t\tfor (var i=start; i <= end; i += settings.step*60) {\n\t\t\tvar timeInt = i;\n\t\t\tvar timeString = _int2time(timeInt, settings.timeFormat);\n\n\t\t\tif (settings.useSelect) {\n\t\t\t\tvar row = $('<option />', { 'value': timeString });\n\t\t\t\trow.text(timeString);\n\t\t\t} else {\n\t\t\t\tvar row = $('<li />');\n\t\t\t\trow.data('time', (timeInt <= 86400 ? timeInt : timeInt % 86400));\n\t\t\t\trow.text(timeString);\n\t\t\t}\n\n\t\t\tif ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\n\t\t\t\tvar durationString = _int2duration(i - durStart);\n\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\trow.text(row.text()+' ('+durationString+')');\n\t\t\t\t} else {\n\t\t\t\t\tvar duration = $('<span />', { 'class': 'ui-timepicker-duration' });\n\t\t\t\t\tduration.text(' ('+durationString+')');\n\t\t\t\t\trow.append(duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (drCur < drLen) {\n\t\t\t\tif (timeInt >= dr[drCur][1]) {\n\t\t\t\t\tdrCur += 1;\n\t\t\t\t}\n\n\t\t\t\tif (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\n\t\t\t\t\tif (settings.useSelect) {\n\t\t\t\t\t\trow.prop('disabled', true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.addClass('ui-timepicker-disabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlist.append(row);\n\t\t}\n\n\t\twrapped_list.data('timepicker-input', self);\n\t\tself.data('timepicker-list', wrapped_list);\n\n\t\tif (settings.useSelect) {\n\t\t\tlist.val(_roundTime(self.val(), settings));\n\t\t\tlist.on('focus', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('showTimepicker');\n\t\t\t});\n\t\t\tlist.on('blur', function(){\n\t\t\t\t$(this).data('timepicker-input').trigger('hideTimepicker');\n\t\t\t});\n\t\t\tlist.on('change', function(){\n\t\t\t\t_setTimeValue(self, $(this).val(), 'select');\n\t\t\t});\n\n\t\t\tself.hide().after(list);\n\t\t} else {\n\t\t\tvar appendTo = settings.appendTo;\n\t\t\tif (typeof appendTo === 'string') {\n\t\t\t\tappendTo = $(appendTo);\n\t\t\t} else if (typeof appendTo === 'function') {\n\t\t\t\tappendTo = appendTo(self);\n\t\t\t}\n\t\t\tappendTo.append(wrapped_list);\n\t\t\t_setSelected(self, list);\n\n\t\t\tlist.on('click', 'li', function(e) {\n\n\t\t\t\t// hack: temporarily disable the focus handler\n\t\t\t\t// to deal with the fact that IE fires 'focus'\n\t\t\t\t// events asynchronously\n\t\t\t\tself.off('focus.timepicker');\n\t\t\t\tself.on('focus.timepicker-ie-hack', function(){\n\t\t\t\t\tself.off('focus.timepicker-ie-hack');\n\t\t\t\t\tself.on('focus.timepicker', methods.show);\n\t\t\t\t});\n\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself[0].focus();\n\t\t\t\t}\n\n\t\t\t\t// make sure only the clicked row is selected\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\t$(this).addClass('ui-timepicker-selected');\n\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tself.trigger('hideTimepicker');\n\t\t\t\t\twrapped_list.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _roundTime(time, settings)\n\t{\n\t\tif (!$.isNumeric(time)) {\n\t\t\ttime = _time2int(time);\n\t\t}\n\n\t\tif (time === null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar step = settings.step*60;\n\t\t\t// round to the nearest step\n\t\t\treturn _int2time(Math.round(time / step) * step, settings.timeFormat);\n\t\t}\n\t}\n\n\tfunction _generateBaseDate()\n\t{\n\t\treturn new Date(1970, 1, 1, 0, 0, 0);\n\t}\n\n\t// event handler to decide whether to close timepicker\n\tfunction _closeHandler(e)\n\t{\n\t\tvar target = $(e.target);\n\t\tvar input = target.closest('.ui-timepicker-input');\n\t\tif (input.length === 0 && target.closest('.ui-timepicker-wrapper').length === 0) {\n\t\t\tmethods.hide();\n\t\t\t$(document).unbind('.ui-timepicker');\n\t\t}\n\t}\n\n\tfunction _hideKeyboard(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\treturn ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && settings.disableTouchKeyboard);\n\t}\n\n\tfunction _findRow(self, list, value)\n\t{\n\t\tif (!value && value !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar out = false;\n\t\tvar halfStep = settings.step*30;\n\n\t\t// loop through the menu items\n\t\tlist.find('li').each(function(i, obj) {\n\t\t\tvar jObj = $(obj);\n\n\t\t\tvar offset = jObj.data('time') - value;\n\n\t\t\t// check if the value is less than half a step from each row\n\t\t\tif (Math.abs(offset) < halfStep || offset == halfStep) {\n\t\t\t\tout = jObj;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\treturn out;\n\t}\n\n\tfunction _setSelected(self, list)\n\t{\n\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\n\t\tvar timeValue = _time2int(_getTimeValue(self));\n\t\tif (timeValue === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selected = _findRow(self, list, timeValue);\n\t\tif (selected) {\n\n\t\t\tvar topDelta = selected.offset().top - list.offset().top;\n\n\t\t\tif (topDelta + selected.outerHeight() > list.outerHeight() || topDelta < 0) {\n\t\t\t\tlist.scrollTop(list.scrollTop() + selected.position().top - selected.outerHeight());\n\t\t\t}\n\n\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t}\n\t}\n\n\n\tfunction _formatValue()\n\t{\n\t\tif (this.value === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (list && list.is(':visible')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar seconds = _time2int(this.value);\n\n\t\tif (seconds === null) {\n\t\t\tself.trigger('timeFormatError');\n\t\t\treturn;\n\t\t}\n\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar rangeError = false;\n\t\t// check that the time in within bounds\n\t\tif (settings.minTime !== null && seconds < settings.minTime) {\n\t\t\trangeError = true;\n\t\t} else if (settings.maxTime !== null && seconds > settings.maxTime) {\n\t\t\trangeError = true;\n\t\t}\n\n\t\t// check that time isn't within disabled time ranges\n\t\t$.each(settings.disableTimeRanges, function(){\n\t\t\tif (seconds >= this[0] && seconds < this[1]) {\n\t\t\t\trangeError = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tif (settings.forceRoundTime) {\n\t\t\tvar offset = seconds % (settings.step*60); // step is in minutes\n\n\t\t\tif (offset >= settings.step*30) {\n\t\t\t\t// if offset is larger than a half step, round up\n\t\t\t\tseconds += (settings.step*60) - offset;\n\t\t\t} else {\n\t\t\t\t// round down\n\t\t\t\tseconds -= offset;\n\t\t\t}\n\t\t}\n\n\t\tvar prettyTime = _int2time(seconds, settings.timeFormat);\n\n\t\tif (rangeError) {\n\t\t\tif (_setTimeValue(self, prettyTime, 'error')) {\n\t\t\t\tself.trigger('timeRangeError');\n\t\t\t}\n\t\t} else {\n\t\t\t_setTimeValue(self, prettyTime);\n\t\t}\n\t}\n\n\tfunction _getTimeValue(self)\n\t{\n\t\tif (self.is('input')) {\n\t\t\treturn self.val();\n\t\t} else {\n\t\t\t// use the element's data attributes to store values\n\t\t\treturn self.data('ui-timepicker-value');\n\t\t}\n\t}\n\n\tfunction _setTimeValue(self, value, source)\n\t{\n\t\tif (self.is('input')) {\n\t\t\tself.val(value);\n\n\t\t\tvar settings = self.data('timepicker-settings');\n\t\t\tif (settings.useSelect) {\n\t\t\t\tself.data('timepicker-list').val(_roundTime(value, settings));\n\t\t\t}\n\t\t}\n\n\t\tif (self.data('ui-timepicker-value') != value) {\n\t\t\tself.data('ui-timepicker-value', value);\n\t\t\tif (source == 'select') {\n\t\t\t\tself.trigger('selectTime').trigger('changeTime').trigger('change');\n\t\t\t} else if (source != 'error') {\n\t\t\t\tself.trigger('changeTime');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tself.trigger('selectTime');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/*\n\t*  Keyboard navigation via arrow keys\n\t*/\n\tfunction _keydownhandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\tif (e.keyCode == 40) {\n\t\t\t\tif (!_hideKeyboard(self)) {\n\t\t\t\t\tself.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 13: // return\n\t\t\t\tif (_selectValue(self)) {\n\t\t\t\t\tmethods.hide.apply(this);\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\n\t\t\tcase 38: // up\n\t\t\t\tvar selected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (!selected.length) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\n\t\t\t\t} else if (!selected.is(':first-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.prev().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.prev().position().top < selected.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() - selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 40: // down\n\t\t\t\tselected = list.find('.ui-timepicker-selected');\n\n\t\t\t\tif (selected.length === 0) {\n\t\t\t\t\tlist.find('li').each(function(i, obj) {\n\t\t\t\t\t\tif ($(obj).position().top > 0) {\n\t\t\t\t\t\t\tselected = $(obj);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tselected.addClass('ui-timepicker-selected');\n\t\t\t\t} else if (!selected.is(':last-child')) {\n\t\t\t\t\tselected.removeClass('ui-timepicker-selected');\n\t\t\t\t\tselected.next().addClass('ui-timepicker-selected');\n\n\t\t\t\t\tif (selected.next().position().top + 2*selected.outerHeight() > list.outerHeight()) {\n\t\t\t\t\t\tlist.scrollTop(list.scrollTop() + selected.outerHeight());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\tcase 27: // escape\n\t\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tcase 9: //tab\n\t\t\t\tmethods.hide();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\t/*\n\t*\tTime typeahead\n\t*/\n\tfunction _keyuphandler(e)\n\t{\n\t\tvar self = $(this);\n\t\tvar list = self.data('timepicker-list');\n\n\t\tif (!list || !list.is(':visible')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!self.data('timepicker-settings').typeaheadHighlight) {\n\t\t\tlist.find('li').removeClass('ui-timepicker-selected');\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\tcase 96: // numpad numerals\n\t\t\tcase 97:\n\t\t\tcase 98:\n\t\t\tcase 99:\n\t\t\tcase 100:\n\t\t\tcase 101:\n\t\t\tcase 102:\n\t\t\tcase 103:\n\t\t\tcase 104:\n\t\t\tcase 105:\n\t\t\tcase 48: // numerals\n\t\t\tcase 49:\n\t\t\tcase 50:\n\t\t\tcase 51:\n\t\t\tcase 52:\n\t\t\tcase 53:\n\t\t\tcase 54:\n\t\t\tcase 55:\n\t\t\tcase 56:\n\t\t\tcase 57:\n\t\t\tcase 65: // a\n\t\t\tcase 77: // m\n\t\t\tcase 80: // p\n\t\t\tcase 186: // colon\n\t\t\tcase 8: // backspace\n\t\t\tcase 46: // delete\n\t\t\t\t_setSelected(self, list);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// list.find('li').removeClass('ui-timepicker-selected');\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction _selectValue(self)\n\t{\n\t\tvar settings = self.data('timepicker-settings');\n\t\tvar list = self.data('timepicker-list');\n\t\tvar timeValue = null;\n\n\t\tvar cursor = list.find('.ui-timepicker-selected');\n\n\t\tif (cursor.hasClass('ui-timepicker-disabled')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (cursor.length) {\n\t\t\t// selected value found\n\t\t\ttimeValue = cursor.data('time');\n\n\t\t} else if (_getTimeValue(self)) {\n\n\t\t\t// no selected value; fall back on input value\n\t\t\ttimeValue = _time2int(_getTimeValue(self));\n\n\t\t\t_setSelected(self, list);\n\t\t}\n\n\t\tif (timeValue !== null) {\n\t\t\tvar timeString = _int2time(timeValue, settings.timeFormat);\n\t\t\t_setTimeValue(self, timeString, 'select');\n\t\t}\n\n\t\t//self.trigger('change').trigger('selectTime');\n\t\treturn true;\n\t}\n\n\tfunction _int2duration(seconds)\n\t{\n\t\tvar minutes = Math.round(seconds/60);\n\t\tvar duration;\n\n\t\tif (Math.abs(minutes) < 60) {\n\t\t\tduration = [minutes, _lang.mins];\n\t\t} else if (minutes == 60) {\n\t\t\tduration = ['1', _lang.hr];\n\t\t} else {\n\t\t\tvar hours = (minutes/60).toFixed(1);\n\t\t\tif (_lang.decimal != '.') hours = hours.replace('.', _lang.decimal);\n\t\t\tduration = [hours, _lang.hrs];\n\t\t}\n\n\t\treturn duration.join(' ');\n\t}\n\n\tfunction _int2time(seconds, format)\n\t{\n\t\tif (seconds === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar time = new Date(_baseDate.valueOf() + (seconds*1000));\n\n\t\tif (isNaN(time.getTime())) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar output = '';\n\t\tvar hour, code;\n\n\t\tfor (var i=0; i<format.length; i++) {\n\n\t\t\tcode = format.charAt(i);\n\t\t\tswitch (code) {\n\n\t\t\t\tcase 'a':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'pm' : 'am';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'A':\n\t\t\t\t\toutput += (time.getHours() > 11) ? 'PM' : 'AM';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\thour = time.getHours() % 12;\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'G':\n\t\t\t\t\toutput += time.getHours();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'h':\n\t\t\t\t\thour = time.getHours() % 12;\n\n\t\t\t\t\tif (hour !== 0 && hour < 10) {\n\t\t\t\t\t\thour = '0'+hour;\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += (hour === 0) ? '12' : hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'H':\n\t\t\t\t\thour = time.getHours();\n\t\t\t\t\tif (seconds === _ONE_DAY) hour = 24;\n\t\t\t\t\toutput += (hour > 9) ? hour : '0'+hour;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'i':\n\t\t\t\t\tvar minutes = time.getMinutes();\n\t\t\t\t\toutput += (minutes > 9) ? minutes : '0'+minutes;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 's':\n\t\t\t\t\tseconds = time.getSeconds();\n\t\t\t\t\toutput += (seconds > 9) ? seconds : '0'+seconds;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\toutput += code;\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tfunction _time2int(timeString)\n\t{\n\t\tif (timeString === '') return null;\n\t\tif (!timeString || timeString+0 == timeString) return timeString;\n\n\t\tif (typeof(timeString) == 'object') {\n\t\t\ttimeString = timeString.getHours()+':'+_pad2(timeString.getMinutes())+':'+_pad2(timeString.getSeconds());\n\t\t}\n\n\t\ttimeString = timeString.toLowerCase();\n\n\t\tvar d = new Date(0);\n\t\tvar time;\n\n\t\t// try to parse time input\n\t\tif (timeString.indexOf("":"") === -1) {\n\t\t\t// no colon present\n\t\t\ttime = timeString.match(/^([0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\n\t\t\tif (!time) {\n\t\t\t\ttime = timeString.match(/^([0-2][0-9]):?([0-5][0-9])?:?([0-5][0-9])?\\s*([pa]?)m?$/);\n\t\t\t}\n\t\t} else {\n\t\t\ttime = timeString.match(/^(\\d{1,2})(?::([0-5][0-9]))?(?::([0-5][0-9]))?\\s*([pa]?)m?$/);\n\t\t}\n\n\t\tif (!time) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar hour = parseInt(time[1]*1, 10);\n\t\tvar hours;\n\n\t\tif (time[4]) {\n\t\t\tif (hour == 12) {\n\t\t\t\thours = (time[4] == 'p') ? 12 : 0;\n\t\t\t} else {\n\t\t\t\thours = (hour + (time[4] == 'p' ? 12 : 0));\n\t\t\t}\n\n\t\t} else {\n\t\t\thours = hour;\n\t\t}\n\n\t\tvar minutes = ( time[2]*1 || 0 );\n\t\tvar seconds = ( time[3]*1 || 0 );\n\t\treturn hours*3600 + minutes*60 + seconds;\n\t}\n\n\tfunction _pad2(n) {\n\t\treturn (""0"" + n).slice(-2);\n\t}\n\n\t// Plugin entry\n\t$.fn.timepicker = function(method)\n\t{\n\t\tif (!this.length) return this;\n\t\tif (methods[method]) {\n\t\t\t// check if this element is a timepicker\n\t\t\tif (!this.hasClass('ui-timepicker-input')) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\treturn methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\t\telse if(typeof method === ""object"" || !method) { return methods.init.apply(this, arguments); }\n\t\telse { $.error(""Method ""+ method + "" does not exist on jQuery.timepicker""); }\n\t};\n}));\n\n----------------------------------- SOURCE END -------------------------------------",1392831197543
error,log,,,"Error in JSDT Core during reconcile",1392831197568
activated,workbench,org.eclipse.ui.workbench,3.7.0.I20110519-0100,"",1392831198143
error,log,,,"Problems occurred when invoking code from plug-in: ""org.eclipse.wst.jsdt.ui"".",1392831200860
error,log,,,"Error in JSDT Core during AST creation",1392831200870
