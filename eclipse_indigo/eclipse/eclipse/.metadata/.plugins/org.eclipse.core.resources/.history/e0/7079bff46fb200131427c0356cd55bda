package controller;

import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.joda.time.DateTime;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.Minutes;
import org.omg.CORBA.PUBLIC_MEMBER;

import bean.ChatInfo;
import database.DAOQueries;

/**
 * Servlet implementation class ChatController
 */
public class ChatController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public ChatController() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		DAOQueries db = new DAOQueries();
		HttpSession session = request.getSession(false);
		String startDate = request.getParameter("startDate");
		String startTime = request.getParameter("endTime");
		SimpleDateFormat formatter = new SimpleDateFormat(
				"MM/dd/yyyy HH:mm");
		String datetime = startDate + " " + startTime + ":00";

		try {

			Date date = formatter.parse(datetime);
			String chatStart = formatter.format(date);
		


		int i = Integer.parseInt( request.getParameter("button"));
		if (session != null) {
			String button = request.getParameter("button1");
			if ("send".equals(button)) {
				ChatInfo bean = new ChatInfo();
				bean.setFromemailid((String) session.getAttribute("userName"));
				bean.setToemailid((String) request.getParameter("toemailid"));
				bean.setChat((String) session.getAttribute("firstName") + ": "
						+ (String) request.getParameter("Chat"));
				System.out.println(bean.getChat() + bean.getFromemailid()
						+ bean.getToemailid());
				ArrayList<String> chat = db.saveChat(bean);
				session.setAttribute("Chat", chat);
			
				System.out.println("i"+i);
				boolean value=validdateTime(chatStart);
				System.out.println(value);
				if(value==true)
				response.sendRedirect("/online_Doctor/JSP Pages/Chat.jsp?button="
						+ i+"&startDate="+startDate+"&startTime="+startTime);
				else
					response.sendRedirect("/online_Doctor/JSP Pages/invalidChat.jsp");
			

			}

			else {
					boolean value=validdateTime(chatStart);
					System.out.println(value);
					if(value==true)
					response.sendRedirect("/online_Doctor/JSP Pages/Chat.jsp?button="
							+ i+"&startDate="+startDate+"&startTime="+startTime);
					else
						response.sendRedirect("/online_Doctor/JSP Pages/invalidChat.jsp");

			}

		}
		} catch (ParseException e) {
			System.out.println("Error");
			e.printStackTrace();
		}
		response.sendRedirect("/online_Doctor/JSP Pages/invalidChat.jsp");
	}
	protected boolean validdateTime(String startTime) {
		// Calulate current Time
		SimpleDateFormat format = new SimpleDateFormat(
				"MM/dd/yyyy HH:mm");
		Date date = new Date();
		String currenttime = format.format(date);
		date = new Date();
		
		Date d1 = null;
		Date d2 = null;

		try {
			d1 = format.parse(startTime);
			d2 = format.parse(currenttime);

			DateTime dt1 = new DateTime(d1);
			DateTime dt2 = new DateTime(d2);

			int noofdays=Days.daysBetween(dt1, dt2).getDays();
					
			int noofhours=Hours.hoursBetween(dt1, dt2).getHours() % 24; 
			int nomins=Minutes.minutesBetween(dt1, dt2).getMinutes() % 60;
			System.out.println("Days"+noofdays+"Hours"+noofhours+"Mins"+nomins);
			if(noofdays==0)
			{
				System.out.println("true");
				if(noofhours==0)
				{
			System.out.println("true");
					return true;
				}
			}
				
			

		} catch (Exception e) {
			e.printStackTrace();
		}

		
		return false;
	}


}
